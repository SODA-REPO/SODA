{"message":"the feature `specialization` is incomplete and may not be safe to use and/or cause compiler crashes","code":{"code":"incomplete_features","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":192,"byte_end":206,"line_start":10,"line_end":10,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"    specialization,","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(incomplete_features)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"see issue #31844 <https://github.com/rust-lang/rust/issues/31844> for more information","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `min_specialization` instead, which is more stable and complete","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the feature `specialization` is incomplete and may not be safe to use and/or cause compiler crashes\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    specialization,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(incomplete_features)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see issue #31844 <https://github.com/rust-lang/rust/issues/31844> for more information\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using `min_specialization` instead, which is more stable and complete\u001b[0m\n\n"}
{"message":"unused import: `std::collections::BTreeSet`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/cache.rs","byte_start":4,"byte_end":30,"line_start":1,"line_end":1,"column_start":5,"column_end":31,"is_primary":true,"text":[{"text":"use std::collections::BTreeSet;","highlight_start":5,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/cache.rs","byte_start":0,"byte_end":31,"line_start":1,"line_end":1,"column_start":1,"column_end":32,"is_primary":true,"text":[{"text":"use std::collections::BTreeSet;","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::collections::BTreeSet`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/cache.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::collections::BTreeSet;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `crate::rdd::CacheMeta`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/cache.rs","byte_start":198,"byte_end":219,"line_start":9,"line_end":9,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"use crate::rdd::CacheMeta;","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/cache.rs","byte_start":194,"byte_end":220,"line_start":9,"line_end":9,"column_start":1,"column_end":27,"is_primary":true,"text":[{"text":"use crate::rdd::CacheMeta;","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::rdd::CacheMeta`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/cache.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::rdd::CacheMeta;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `BTreeSet`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/cache_tracker.rs","byte_start":57,"byte_end":65,"line_start":2,"line_end":2,"column_start":24,"column_end":32,"is_primary":true,"text":[{"text":"use std::collections::{BTreeSet, HashMap};","highlight_start":24,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/cache_tracker.rs","byte_start":57,"byte_end":67,"line_start":2,"line_end":2,"column_start":24,"column_end":34,"is_primary":true,"text":[{"text":"use std::collections::{BTreeSet, HashMap};","highlight_start":24,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `BTreeSet`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/cache_tracker.rs:2:24\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::collections::{BTreeSet, HashMap};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `Builder as MsgBuilder`, `HeapAllocator`, `Reader as CpnpReader`, `serialize::OwnedSegments`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/context.rs","byte_start":897,"byte_end":918,"line_start":27,"line_end":27,"column_start":15,"column_end":36,"is_primary":true,"text":[{"text":"    message::{Builder as MsgBuilder, HeapAllocator, Reader as CpnpReader, ReaderOptions},","highlight_start":15,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/context.rs","byte_start":920,"byte_end":933,"line_start":27,"line_end":27,"column_start":38,"column_end":51,"is_primary":true,"text":[{"text":"    message::{Builder as MsgBuilder, HeapAllocator, Reader as CpnpReader, ReaderOptions},","highlight_start":38,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/context.rs","byte_start":935,"byte_end":955,"line_start":27,"line_end":27,"column_start":53,"column_end":73,"is_primary":true,"text":[{"text":"    message::{Builder as MsgBuilder, HeapAllocator, Reader as CpnpReader, ReaderOptions},","highlight_start":53,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/context.rs","byte_start":977,"byte_end":1001,"line_start":28,"line_end":28,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"    serialize::OwnedSegments,","highlight_start":5,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/context.rs","byte_start":897,"byte_end":957,"line_start":27,"line_end":27,"column_start":15,"column_end":75,"is_primary":true,"text":[{"text":"    message::{Builder as MsgBuilder, HeapAllocator, Reader as CpnpReader, ReaderOptions},","highlight_start":15,"highlight_end":75}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/context.rs","byte_start":971,"byte_end":1001,"line_start":27,"line_end":28,"column_start":89,"column_end":29,"is_primary":true,"text":[{"text":"    message::{Builder as MsgBuilder, HeapAllocator, Reader as CpnpReader, ReaderOptions},","highlight_start":89,"highlight_end":90},{"text":"    serialize::OwnedSegments,","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Builder as MsgBuilder`, `HeapAllocator`, `Reader as CpnpReader`, `serialize::OwnedSegments`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/context.rs:27:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    message::{Builder as MsgBuilder, HeapAllocator, Reader as CpnpReader, ReaderOptions},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    serialize::OwnedSegments,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `free_res_enc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/dependency.rs","byte_start":124,"byte_end":136,"line_start":5,"line_end":5,"column_start":19,"column_end":31,"is_primary":true,"text":[{"text":"    default_hash, free_res_enc, get_encrypted_data, wrapper_secure_execute, AccArg, ItemE, OpId,","highlight_start":19,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/dependency.rs","byte_start":122,"byte_end":136,"line_start":5,"line_end":5,"column_start":17,"column_end":31,"is_primary":true,"text":[{"text":"    default_hash, free_res_enc, get_encrypted_data, wrapper_secure_execute, AccArg, ItemE, OpId,","highlight_start":17,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `free_res_enc`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/dependency.rs:5:19\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    default_hash, free_res_enc, get_encrypted_data, wrapper_secure_execute, AccArg, ItemE, OpId,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `sgx_types::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/dependency.rs","byte_start":390,"byte_end":402,"line_start":12,"line_end":12,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"use sgx_types::*;","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/dependency.rs","byte_start":386,"byte_end":403,"line_start":12,"line_end":12,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"use sgx_types::*;","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `sgx_types::*`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/dependency.rs:12:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse sgx_types::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `Duration`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/dependency.rs","byte_start":567,"byte_end":575,"line_start":22,"line_end":22,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"use std::time::{Duration, Instant};","highlight_start":17,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/dependency.rs","byte_start":567,"byte_end":577,"line_start":22,"line_end":22,"column_start":17,"column_end":27,"is_primary":true,"text":[{"text":"use std::time::{Duration, Instant};","highlight_start":17,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Duration`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/dependency.rs:22:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::time::{Duration, Instant};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::collections::HashMap`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/env.rs","byte_start":4,"byte_end":29,"line_start":1,"line_end":1,"column_start":5,"column_end":30,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/env.rs","byte_start":0,"byte_end":30,"line_start":1,"line_end":1,"column_start":1,"column_end":31,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::collections::HashMap`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/env.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::collections::HashMap;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::mem::forget`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/env.rs","byte_start":48,"byte_end":64,"line_start":3,"line_end":3,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"use std::mem::forget;","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/env.rs","byte_start":44,"byte_end":65,"line_start":3,"line_end":3,"column_start":1,"column_end":22,"is_primary":true,"text":[{"text":"use std::mem::forget;","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::mem::forget`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/env.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::mem::forget;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `AtomicUsize`, `Ordering`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/env.rs","byte_start":144,"byte_end":155,"line_start":7,"line_end":7,"column_start":14,"column_end":25,"is_primary":true,"text":[{"text":"    atomic::{AtomicUsize, Ordering},","highlight_start":14,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/env.rs","byte_start":157,"byte_end":165,"line_start":7,"line_end":7,"column_start":27,"column_end":35,"is_primary":true,"text":[{"text":"    atomic::{AtomicUsize, Ordering},","highlight_start":27,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/env.rs","byte_start":135,"byte_end":172,"line_start":7,"line_end":8,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    atomic::{AtomicUsize, Ordering},","highlight_start":5,"highlight_end":37},{"text":"    Arc, Mutex,","highlight_start":1,"highlight_end":5}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `AtomicUsize`, `Ordering`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/env.rs:7:14\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    atomic::{AtomicUsize, Ordering},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `tokio_stream::StreamExt`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/executor.rs","byte_start":656,"byte_end":679,"line_start":22,"line_end":22,"column_start":5,"column_end":28,"is_primary":true,"text":[{"text":"use tokio_stream::StreamExt;","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/executor.rs","byte_start":652,"byte_end":680,"line_start":22,"line_end":22,"column_start":1,"column_end":29,"is_primary":true,"text":[{"text":"use tokio_stream::StreamExt;","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `tokio_stream::StreamExt`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/executor.rs:22:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse tokio_stream::StreamExt;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `Func`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/io/mod.rs","byte_start":110,"byte_end":114,"line_start":5,"line_end":5,"column_start":40,"column_end":44,"is_primary":true,"text":[{"text":"use crate::serializable_traits::{Data, Func, SerFunc};","highlight_start":40,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/io/mod.rs","byte_start":108,"byte_end":114,"line_start":5,"line_end":5,"column_start":38,"column_end":44,"is_primary":true,"text":[{"text":"use crate::serializable_traits::{Data, Func, SerFunc};","highlight_start":38,"highlight_end":44}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Func`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/io/mod.rs:5:40\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::serializable_traits::{Data, Func, SerFunc};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::collections::HashMap`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/io/local_file_reader.rs","byte_start":31,"byte_end":56,"line_start":2,"line_end":2,"column_start":5,"column_end":30,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/io/local_file_reader.rs","byte_start":27,"byte_end":57,"line_start":2,"line_end":2,"column_start":1,"column_end":31,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::collections::HashMap`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/io/local_file_reader.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::collections::HashMap;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `atomic`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/io/local_file_reader.rs","byte_start":221,"byte_end":227,"line_start":8,"line_end":8,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"use std::sync::{atomic, mpsc::SyncSender, Arc, Weak};","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/io/local_file_reader.rs","byte_start":221,"byte_end":229,"line_start":8,"line_end":8,"column_start":17,"column_end":25,"is_primary":true,"text":[{"text":"use std::sync::{atomic, mpsc::SyncSender, Arc, Weak};","highlight_start":17,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `atomic`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/io/local_file_reader.rs:8:17\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::sync::{atomic, mpsc::SyncSender, Arc, Weak};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `self`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/io/local_file_reader.rs","byte_start":277,"byte_end":281,"line_start":9,"line_end":9,"column_start":19,"column_end":23,"is_primary":true,"text":[{"text":"use std::thread::{self, JoinHandle};","highlight_start":19,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/io/local_file_reader.rs","byte_start":277,"byte_end":283,"line_start":9,"line_end":9,"column_start":19,"column_end":25,"is_primary":true,"text":[{"text":"use std::thread::{self, JoinHandle};","highlight_start":19,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `self`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/io/local_file_reader.rs:9:19\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::thread::{self, JoinHandle};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"unused import: `BOUNDED_MEM_CACHE`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/io/local_file_reader.rs","byte_start":407,"byte_end":424,"line_start":14,"line_end":14,"column_start":23,"column_end":40,"is_primary":true,"text":[{"text":"use crate::env::{Env, BOUNDED_MEM_CACHE};","highlight_start":23,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/io/local_file_reader.rs","byte_start":405,"byte_end":424,"line_start":14,"line_end":14,"column_start":21,"column_end":40,"is_primary":true,"text":[{"text":"use crate::env::{Env, BOUNDED_MEM_CACHE};","highlight_start":21,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `BOUNDED_MEM_CACHE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/io/local_file_reader.rs:14:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::env::{Env, BOUNDED_MEM_CACHE};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::serialization_free::Construct`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/io/local_file_reader.rs","byte_start":567,"byte_end":603,"line_start":19,"line_end":19,"column_start":5,"column_end":41,"is_primary":true,"text":[{"text":"use crate::serialization_free::Construct;","highlight_start":5,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/io/local_file_reader.rs","byte_start":563,"byte_end":604,"line_start":19,"line_end":19,"column_start":1,"column_end":42,"is_primary":true,"text":[{"text":"use crate::serialization_free::Construct;","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::serialization_free::Construct`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/io/local_file_reader.rs:19:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::serialization_free::Construct;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `parking_lot::Mutex`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/io/local_file_reader.rs","byte_start":665,"byte_end":683,"line_start":23,"line_end":23,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"use parking_lot::Mutex;","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/io/local_file_reader.rs","byte_start":661,"byte_end":684,"line_start":23,"line_end":23,"column_start":1,"column_end":24,"is_primary":true,"text":[{"text":"use parking_lot::Mutex;","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `parking_lot::Mutex`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/io/local_file_reader.rs:23:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse parking_lot::Mutex;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `sgx_types::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/io/local_file_reader.rs","byte_start":733,"byte_end":745,"line_start":25,"line_end":25,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"use sgx_types::*;","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/io/local_file_reader.rs","byte_start":729,"byte_end":746,"line_start":25,"line_end":25,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"use sgx_types::*;","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `sgx_types::*`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/io/local_file_reader.rs:25:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse sgx_types::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `Any`, `TypeId`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":42,"byte_end":45,"line_start":2,"line_end":2,"column_start":16,"column_end":19,"is_primary":true,"text":[{"text":"use std::any::{Any, TypeId};","highlight_start":16,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rdd/rdd.rs","byte_start":47,"byte_end":53,"line_start":2,"line_end":2,"column_start":21,"column_end":27,"is_primary":true,"text":[{"text":"use std::any::{Any, TypeId};","highlight_start":21,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":27,"byte_end":55,"line_start":2,"line_end":2,"column_start":1,"column_end":29,"is_primary":true,"text":[{"text":"use std::any::{Any, TypeId};","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Any`, `TypeId`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/rdd.rs:2:16\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::any::{Any, TypeId};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::borrow::BorrowMut`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":60,"byte_end":82,"line_start":3,"line_end":3,"column_start":5,"column_end":27,"is_primary":true,"text":[{"text":"use std::borrow::BorrowMut;","highlight_start":5,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":56,"byte_end":83,"line_start":3,"line_end":3,"column_start":1,"column_end":28,"is_primary":true,"text":[{"text":"use std::borrow::BorrowMut;","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::borrow::BorrowMut`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/rdd.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::borrow::BorrowMut;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `BTreeMap`, `BTreeSet`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":167,"byte_end":175,"line_start":5,"line_end":5,"column_start":49,"column_end":57,"is_primary":true,"text":[{"text":"use std::collections::{hash_map::DefaultHasher, BTreeMap, BTreeSet, HashMap};","highlight_start":49,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rdd/rdd.rs","byte_start":177,"byte_end":185,"line_start":5,"line_end":5,"column_start":59,"column_end":67,"is_primary":true,"text":[{"text":"use std::collections::{hash_map::DefaultHasher, BTreeMap, BTreeSet, HashMap};","highlight_start":59,"highlight_end":67}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":165,"byte_end":185,"line_start":5,"line_end":5,"column_start":47,"column_end":67,"is_primary":true,"text":[{"text":"use std::collections::{hash_map::DefaultHasher, BTreeMap, BTreeSet, HashMap};","highlight_start":47,"highlight_end":67}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `BTreeMap`, `BTreeSet`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/rdd.rs:5:49\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::collections::{hash_map::DefaultHasher, BTreeMap, BTreeSet, HashMap};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::marker::PhantomData`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":305,"byte_end":329,"line_start":10,"line_end":10,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"use std::marker::PhantomData;","highlight_start":5,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":301,"byte_end":330,"line_start":10,"line_end":10,"column_start":1,"column_end":30,"is_primary":true,"text":[{"text":"use std::marker::PhantomData;","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::marker::PhantomData`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/rdd.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::marker::PhantomData;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `AtomicUsize`, `Receiver`, `RwLock`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":479,"byte_end":490,"line_start":16,"line_end":16,"column_start":32,"column_end":43,"is_primary":true,"text":[{"text":"    atomic::{self, AtomicBool, AtomicUsize},","highlight_start":32,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rdd/rdd.rs","byte_start":518,"byte_end":526,"line_start":17,"line_end":17,"column_start":26,"column_end":34,"is_primary":true,"text":[{"text":"    mpsc::{sync_channel, Receiver, RecvError, SyncSender},","highlight_start":26,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rdd/rdd.rs","byte_start":561,"byte_end":567,"line_start":18,"line_end":18,"column_start":10,"column_end":16,"is_primary":true,"text":[{"text":"    Arc, RwLock, Weak,","highlight_start":10,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":477,"byte_end":490,"line_start":16,"line_end":16,"column_start":30,"column_end":43,"is_primary":true,"text":[{"text":"    atomic::{self, AtomicBool, AtomicUsize},","highlight_start":30,"highlight_end":43}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/rdd/rdd.rs","byte_start":516,"byte_end":526,"line_start":17,"line_end":17,"column_start":24,"column_end":34,"is_primary":true,"text":[{"text":"    mpsc::{sync_channel, Receiver, RecvError, SyncSender},","highlight_start":24,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/rdd/rdd.rs","byte_start":559,"byte_end":567,"line_start":18,"line_end":18,"column_start":8,"column_end":16,"is_primary":true,"text":[{"text":"    Arc, RwLock, Weak,","highlight_start":8,"highlight_end":16}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `AtomicUsize`, `Receiver`, `RwLock`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/rdd.rs:16:32\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    atomic::{self, AtomicBool, AtomicUsize},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    mpsc::{sync_channel, Receiver, RecvError, SyncSender},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    Arc, RwLock, Weak,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `BOUNDED_MEM_CACHE`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":755,"byte_end":772,"line_start":25,"line_end":25,"column_start":29,"column_end":46,"is_primary":true,"text":[{"text":"use crate::env::{self, Env, BOUNDED_MEM_CACHE};","highlight_start":29,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":753,"byte_end":772,"line_start":25,"line_end":25,"column_start":27,"column_end":46,"is_primary":true,"text":[{"text":"use crate::env::{self, Env, BOUNDED_MEM_CACHE};","highlight_start":27,"highlight_end":46}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `BOUNDED_MEM_CACHE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/rdd.rs:25:29\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::env::{self, Env, BOUNDED_MEM_CACHE};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `once_cell::sync::Lazy`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":1547,"byte_end":1568,"line_start":42,"line_end":42,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"use once_cell::sync::Lazy;","highlight_start":5,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":1543,"byte_end":1569,"line_start":42,"line_end":42,"column_start":1,"column_end":27,"is_primary":true,"text":[{"text":"use once_cell::sync::Lazy;","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `once_cell::sync::Lazy`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/rdd.rs:42:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse once_cell::sync::Lazy;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `ordered_float::OrderedFloat`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":1574,"byte_end":1601,"line_start":43,"line_end":43,"column_start":5,"column_end":32,"is_primary":true,"text":[{"text":"use ordered_float::OrderedFloat;","highlight_start":5,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":1570,"byte_end":1602,"line_start":43,"line_end":43,"column_start":1,"column_end":33,"is_primary":true,"text":[{"text":"use ordered_float::OrderedFloat;","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `ordered_float::OrderedFloat`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/rdd.rs:43:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse ordered_float::OrderedFloat;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::collections::HashMap`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/parallel_collection_rdd.rs","byte_start":114,"byte_end":139,"line_start":2,"line_end":2,"column_start":5,"column_end":30,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/rdd/parallel_collection_rdd.rs","byte_start":110,"byte_end":140,"line_start":2,"line_end":2,"column_start":1,"column_end":31,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::collections::HashMap`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/parallel_collection_rdd.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::collections::HashMap;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `self`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/parallel_collection_rdd.rs","byte_start":205,"byte_end":209,"line_start":4,"line_end":4,"column_start":19,"column_end":23,"is_primary":true,"text":[{"text":"use std::thread::{self, JoinHandle};","highlight_start":19,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/rdd/parallel_collection_rdd.rs","byte_start":205,"byte_end":211,"line_start":4,"line_end":4,"column_start":19,"column_end":25,"is_primary":true,"text":[{"text":"use std::thread::{self, JoinHandle};","highlight_start":19,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `self`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/parallel_collection_rdd.rs:4:19\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::thread::{self, JoinHandle};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"unused imports: `BOUNDED_MEM_CACHE`, `Env`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/parallel_collection_rdd.rs","byte_start":330,"byte_end":333,"line_start":9,"line_end":9,"column_start":18,"column_end":21,"is_primary":true,"text":[{"text":"use crate::env::{Env, BOUNDED_MEM_CACHE, RDDB_MAP};","highlight_start":18,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rdd/parallel_collection_rdd.rs","byte_start":335,"byte_end":352,"line_start":9,"line_end":9,"column_start":23,"column_end":40,"is_primary":true,"text":[{"text":"use crate::env::{Env, BOUNDED_MEM_CACHE, RDDB_MAP};","highlight_start":23,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/rdd/parallel_collection_rdd.rs","byte_start":330,"byte_end":354,"line_start":9,"line_end":9,"column_start":18,"column_end":42,"is_primary":true,"text":[{"text":"use crate::env::{Env, BOUNDED_MEM_CACHE, RDDB_MAP};","highlight_start":18,"highlight_end":42}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `BOUNDED_MEM_CACHE`, `Env`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/parallel_collection_rdd.rs:9:18\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::env::{Env, BOUNDED_MEM_CACHE, RDDB_MAP};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `Func`, `SerFunc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/parallel_collection_rdd.rs","byte_start":467,"byte_end":471,"line_start":12,"line_end":12,"column_start":49,"column_end":53,"is_primary":true,"text":[{"text":"use crate::serializable_traits::{AnyData, Data, Func, SerFunc};","highlight_start":49,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rdd/parallel_collection_rdd.rs","byte_start":473,"byte_end":480,"line_start":12,"line_end":12,"column_start":55,"column_end":62,"is_primary":true,"text":[{"text":"use crate::serializable_traits::{AnyData, Data, Func, SerFunc};","highlight_start":55,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/rdd/parallel_collection_rdd.rs","byte_start":465,"byte_end":480,"line_start":12,"line_end":12,"column_start":47,"column_end":62,"is_primary":true,"text":[{"text":"use crate::serializable_traits::{AnyData, Data, Func, SerFunc};","highlight_start":47,"highlight_end":62}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Func`, `SerFunc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/parallel_collection_rdd.rs:12:49\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::serializable_traits::{AnyData, Data, Func, SerFunc};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::serialization_free::Construct`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/parallel_collection_rdd.rs","byte_start":487,"byte_end":523,"line_start":13,"line_end":13,"column_start":5,"column_end":41,"is_primary":true,"text":[{"text":"use crate::serialization_free::Construct;","highlight_start":5,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/rdd/parallel_collection_rdd.rs","byte_start":483,"byte_end":524,"line_start":13,"line_end":13,"column_start":1,"column_end":42,"is_primary":true,"text":[{"text":"use crate::serialization_free::Construct;","highlight_start":1,"highlight_end":42}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::serialization_free::Construct`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/parallel_collection_rdd.rs:13:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::serialization_free::Construct;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `sgx_types::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/parallel_collection_rdd.rs","byte_start":622,"byte_end":634,"line_start":17,"line_end":17,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"use sgx_types::*;","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/rdd/parallel_collection_rdd.rs","byte_start":618,"byte_end":635,"line_start":17,"line_end":17,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"use sgx_types::*;","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `sgx_types::*`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/parallel_collection_rdd.rs:17:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse sgx_types::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `Env`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/cartesian_rdd.rs","byte_start":120,"byte_end":123,"line_start":5,"line_end":5,"column_start":18,"column_end":21,"is_primary":true,"text":[{"text":"use crate::env::{Env, RDDB_MAP};","highlight_start":18,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/rdd/cartesian_rdd.rs","byte_start":120,"byte_end":125,"line_start":5,"line_end":5,"column_start":18,"column_end":23,"is_primary":true,"text":[{"text":"use crate::env::{Env, RDDB_MAP};","highlight_start":18,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Env`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/cartesian_rdd.rs:5:18\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::env::{Env, RDDB_MAP};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"unused imports: `Func`, `SerFunc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/cartesian_rdd.rs","byte_start":238,"byte_end":242,"line_start":8,"line_end":8,"column_start":49,"column_end":53,"is_primary":true,"text":[{"text":"use crate::serializable_traits::{AnyData, Data, Func, SerFunc};","highlight_start":49,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rdd/cartesian_rdd.rs","byte_start":244,"byte_end":251,"line_start":8,"line_end":8,"column_start":55,"column_end":62,"is_primary":true,"text":[{"text":"use crate::serializable_traits::{AnyData, Data, Func, SerFunc};","highlight_start":55,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/rdd/cartesian_rdd.rs","byte_start":236,"byte_end":251,"line_start":8,"line_end":8,"column_start":47,"column_end":62,"is_primary":true,"text":[{"text":"use crate::serializable_traits::{AnyData, Data, Func, SerFunc};","highlight_start":47,"highlight_end":62}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Func`, `SerFunc`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/cartesian_rdd.rs:8:49\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::serializable_traits::{AnyData, Data, Func, SerFunc};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `parking_lot::Mutex`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/cartesian_rdd.rs","byte_start":283,"byte_end":301,"line_start":10,"line_end":10,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"use parking_lot::Mutex;","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/rdd/cartesian_rdd.rs","byte_start":279,"byte_end":302,"line_start":10,"line_end":10,"column_start":1,"column_end":24,"is_primary":true,"text":[{"text":"use parking_lot::Mutex;","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `parking_lot::Mutex`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/cartesian_rdd.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse parking_lot::Mutex;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `self`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/co_grouped_rdd.rs","byte_start":169,"byte_end":173,"line_start":8,"line_end":8,"column_start":19,"column_end":23,"is_primary":true,"text":[{"text":"use std::thread::{self, JoinHandle};","highlight_start":19,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/rdd/co_grouped_rdd.rs","byte_start":169,"byte_end":175,"line_start":8,"line_end":8,"column_start":19,"column_end":25,"is_primary":true,"text":[{"text":"use std::thread::{self, JoinHandle};","highlight_start":19,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `self`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/co_grouped_rdd.rs:8:19\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::thread::{self, JoinHandle};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"unused import: `BOUNDED_MEM_CACHE`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/co_grouped_rdd.rs","byte_start":409,"byte_end":426,"line_start":16,"line_end":16,"column_start":23,"column_end":40,"is_primary":true,"text":[{"text":"use crate::env::{Env, BOUNDED_MEM_CACHE, RDDB_MAP};","highlight_start":23,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/rdd/co_grouped_rdd.rs","byte_start":407,"byte_end":426,"line_start":16,"line_end":16,"column_start":21,"column_end":40,"is_primary":true,"text":[{"text":"use crate::env::{Env, BOUNDED_MEM_CACHE, RDDB_MAP};","highlight_start":21,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `BOUNDED_MEM_CACHE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/co_grouped_rdd.rs:16:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::env::{Env, BOUNDED_MEM_CACHE, RDDB_MAP};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `ShuffleError`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/co_grouped_rdd.rs","byte_start":681,"byte_end":693,"line_start":23,"line_end":23,"column_start":22,"column_end":34,"is_primary":true,"text":[{"text":"use crate::shuffle::{ShuffleError, ShuffleFetcher};","highlight_start":22,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/rdd/co_grouped_rdd.rs","byte_start":681,"byte_end":695,"line_start":23,"line_end":23,"column_start":22,"column_end":36,"is_primary":true,"text":[{"text":"use crate::shuffle::{ShuffleError, ShuffleFetcher};","highlight_start":22,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `ShuffleError`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/co_grouped_rdd.rs:23:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::shuffle::{ShuffleError, ShuffleFetcher};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `sgx_types::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/co_grouped_rdd.rs","byte_start":785,"byte_end":797,"line_start":26,"line_end":26,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"use sgx_types::*;","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/rdd/co_grouped_rdd.rs","byte_start":781,"byte_end":798,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"use sgx_types::*;","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `sgx_types::*`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/co_grouped_rdd.rs:26:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse sgx_types::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `Env`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/coalesced_rdd.rs","byte_start":458,"byte_end":461,"line_start":15,"line_end":15,"column_start":18,"column_end":21,"is_primary":true,"text":[{"text":"use crate::env::{Env, RDDB_MAP};","highlight_start":18,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/rdd/coalesced_rdd.rs","byte_start":458,"byte_end":463,"line_start":15,"line_end":15,"column_start":18,"column_end":23,"is_primary":true,"text":[{"text":"use crate::env::{Env, RDDB_MAP};","highlight_start":18,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Env`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/coalesced_rdd.rs:15:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::env::{Env, RDDB_MAP};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"unused imports: `Func`, `SerFunc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/coalesced_rdd.rs","byte_start":576,"byte_end":580,"line_start":18,"line_end":18,"column_start":49,"column_end":53,"is_primary":true,"text":[{"text":"use crate::serializable_traits::{AnyData, Data, Func, SerFunc};","highlight_start":49,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rdd/coalesced_rdd.rs","byte_start":582,"byte_end":589,"line_start":18,"line_end":18,"column_start":55,"column_end":62,"is_primary":true,"text":[{"text":"use crate::serializable_traits::{AnyData, Data, Func, SerFunc};","highlight_start":55,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/rdd/coalesced_rdd.rs","byte_start":574,"byte_end":589,"line_start":18,"line_end":18,"column_start":47,"column_end":62,"is_primary":true,"text":[{"text":"use crate::serializable_traits::{AnyData, Data, Func, SerFunc};","highlight_start":47,"highlight_end":62}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Func`, `SerFunc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/coalesced_rdd.rs:18:49\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::serializable_traits::{AnyData, Data, Func, SerFunc};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `Env`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/flatmapper_rdd.rs","byte_start":173,"byte_end":176,"line_start":6,"line_end":6,"column_start":18,"column_end":21,"is_primary":true,"text":[{"text":"use crate::env::{Env, RDDB_MAP};","highlight_start":18,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/rdd/flatmapper_rdd.rs","byte_start":173,"byte_end":178,"line_start":6,"line_end":6,"column_start":18,"column_end":23,"is_primary":true,"text":[{"text":"use crate::env::{Env, RDDB_MAP};","highlight_start":18,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Env`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/flatmapper_rdd.rs:6:18\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::env::{Env, RDDB_MAP};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"unused import: `parking_lot::Mutex`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/flatmapper_rdd.rs","byte_start":327,"byte_end":345,"line_start":11,"line_end":11,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"use parking_lot::Mutex;","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/rdd/flatmapper_rdd.rs","byte_start":323,"byte_end":346,"line_start":11,"line_end":11,"column_start":1,"column_end":24,"is_primary":true,"text":[{"text":"use parking_lot::Mutex;","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `parking_lot::Mutex`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/flatmapper_rdd.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse parking_lot::Mutex;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `Hasher`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/join_rdd.rs","byte_start":72,"byte_end":78,"line_start":3,"line_end":3,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"use std::hash::{Hash, Hasher};","highlight_start":23,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/rdd/join_rdd.rs","byte_start":70,"byte_end":78,"line_start":3,"line_end":3,"column_start":21,"column_end":29,"is_primary":true,"text":[{"text":"use std::hash::{Hash, Hasher};","highlight_start":21,"highlight_end":29}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Hasher`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/join_rdd.rs:3:23\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::hash::{Hash, Hasher};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `self`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/join_rdd.rs","byte_start":169,"byte_end":173,"line_start":8,"line_end":8,"column_start":19,"column_end":23,"is_primary":true,"text":[{"text":"use std::thread::{self, JoinHandle};","highlight_start":19,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/rdd/join_rdd.rs","byte_start":169,"byte_end":175,"line_start":8,"line_end":8,"column_start":19,"column_end":25,"is_primary":true,"text":[{"text":"use std::thread::{self, JoinHandle};","highlight_start":19,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `self`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/join_rdd.rs:8:19\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::thread::{self, JoinHandle};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\n"}
{"message":"unused import: `BOUNDED_MEM_CACHE`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/join_rdd.rs","byte_start":409,"byte_end":426,"line_start":16,"line_end":16,"column_start":23,"column_end":40,"is_primary":true,"text":[{"text":"use crate::env::{Env, BOUNDED_MEM_CACHE, RDDB_MAP};","highlight_start":23,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/rdd/join_rdd.rs","byte_start":407,"byte_end":426,"line_start":16,"line_end":16,"column_start":21,"column_end":40,"is_primary":true,"text":[{"text":"use crate::env::{Env, BOUNDED_MEM_CACHE, RDDB_MAP};","highlight_start":21,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `BOUNDED_MEM_CACHE`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/join_rdd.rs:16:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::env::{Env, BOUNDED_MEM_CACHE, RDDB_MAP};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `ShuffleError`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/join_rdd.rs","byte_start":681,"byte_end":693,"line_start":23,"line_end":23,"column_start":22,"column_end":34,"is_primary":true,"text":[{"text":"use crate::shuffle::{ShuffleError, ShuffleFetcher};","highlight_start":22,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/rdd/join_rdd.rs","byte_start":681,"byte_end":695,"line_start":23,"line_end":23,"column_start":22,"column_end":36,"is_primary":true,"text":[{"text":"use crate::shuffle::{ShuffleError, ShuffleFetcher};","highlight_start":22,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `ShuffleError`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/join_rdd.rs:23:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::shuffle::{ShuffleError, ShuffleFetcher};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `sgx_types::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/join_rdd.rs","byte_start":785,"byte_end":797,"line_start":26,"line_end":26,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"use sgx_types::*;","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/rdd/join_rdd.rs","byte_start":781,"byte_end":798,"line_start":26,"line_end":26,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"use sgx_types::*;","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `sgx_types::*`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/join_rdd.rs:26:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse sgx_types::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `Env`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/mapper_rdd.rs","byte_start":282,"byte_end":285,"line_start":12,"line_end":12,"column_start":18,"column_end":21,"is_primary":true,"text":[{"text":"use crate::env::{Env, RDDB_MAP};","highlight_start":18,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/rdd/mapper_rdd.rs","byte_start":282,"byte_end":287,"line_start":12,"line_end":12,"column_start":18,"column_end":23,"is_primary":true,"text":[{"text":"use crate::env::{Env, RDDB_MAP};","highlight_start":18,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Env`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/mapper_rdd.rs:12:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::env::{Env, RDDB_MAP};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"unused import: `Env`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/pair_rdd.rs","byte_start":229,"byte_end":232,"line_start":8,"line_end":8,"column_start":18,"column_end":21,"is_primary":true,"text":[{"text":"use crate::env::{Env, RDDB_MAP};","highlight_start":18,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/rdd/pair_rdd.rs","byte_start":229,"byte_end":234,"line_start":8,"line_end":8,"column_start":18,"column_end":23,"is_primary":true,"text":[{"text":"use crate::env::{Env, RDDB_MAP};","highlight_start":18,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Env`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/pair_rdd.rs:8:18\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::env::{Env, RDDB_MAP};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"unused import: `parking_lot::Mutex`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/pair_rdd.rs","byte_start":528,"byte_end":546,"line_start":16,"line_end":16,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"use parking_lot::Mutex;","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/rdd/pair_rdd.rs","byte_start":524,"byte_end":547,"line_start":16,"line_end":16,"column_start":1,"column_end":24,"is_primary":true,"text":[{"text":"use parking_lot::Mutex;","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `parking_lot::Mutex`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/pair_rdd.rs:16:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse parking_lot::Mutex;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unnecessary braces around block return value","code":{"code":"unused_braces","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/pair_rdd.rs","byte_start":2701,"byte_end":2703,"line_start":87,"line_end":87,"column_start":56,"column_end":58,"is_primary":true,"text":[{"text":"        let merge_value = Box::new(Fn!(move |(buf, v)| { (f_clone)((buf, v)) }));","highlight_start":56,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rdd/pair_rdd.rs","byte_start":2722,"byte_end":2724,"line_start":87,"line_end":87,"column_start":77,"column_end":79,"is_primary":true,"text":[{"text":"        let merge_value = Box::new(Fn!(move |(buf, v)| { (f_clone)((buf, v)) }));","highlight_start":77,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_braces)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove these braces","code":null,"level":"help","spans":[{"file_name":"src/rdd/pair_rdd.rs","byte_start":2701,"byte_end":2703,"line_start":87,"line_end":87,"column_start":56,"column_end":58,"is_primary":true,"text":[{"text":"        let merge_value = Box::new(Fn!(move |(buf, v)| { (f_clone)((buf, v)) }));","highlight_start":56,"highlight_end":58}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/rdd/pair_rdd.rs","byte_start":2722,"byte_end":2724,"line_start":87,"line_end":87,"column_start":77,"column_end":79,"is_primary":true,"text":[{"text":"        let merge_value = Box::new(Fn!(move |(buf, v)| { (f_clone)((buf, v)) }));","highlight_start":77,"highlight_end":79}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary braces around block return value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/pair_rdd.rs:87:56\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let merge_value = Box::new(Fn!(move |(buf, v)| { (f_clone)((buf, v)) }));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_braces)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these braces\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        let merge_value = Box::new(Fn!(move |(buf, v)| \u001b[0m\u001b[0m\u001b[38;5;9m{ \u001b[0m\u001b[0m(f_clone)((buf, v))\u001b[0m\u001b[0m\u001b[38;5;9m }\u001b[0m\u001b[0m));\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        let merge_value = Box::new(Fn!(move |(buf, v)| (f_clone)((buf, v))));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
{"message":"unnecessary braces around block return value","code":{"code":"unused_braces","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/pair_rdd.rs","byte_start":2787,"byte_end":2789,"line_start":88,"line_end":88,"column_start":60,"column_end":62,"is_primary":true,"text":[{"text":"        let merge_combiners = Box::new(Fn!(move |(b1, b2)| { (func)((b1, b2)) }));","highlight_start":60,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rdd/pair_rdd.rs","byte_start":2805,"byte_end":2807,"line_start":88,"line_end":88,"column_start":78,"column_end":80,"is_primary":true,"text":[{"text":"        let merge_combiners = Box::new(Fn!(move |(b1, b2)| { (func)((b1, b2)) }));","highlight_start":78,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these braces","code":null,"level":"help","spans":[{"file_name":"src/rdd/pair_rdd.rs","byte_start":2787,"byte_end":2789,"line_start":88,"line_end":88,"column_start":60,"column_end":62,"is_primary":true,"text":[{"text":"        let merge_combiners = Box::new(Fn!(move |(b1, b2)| { (func)((b1, b2)) }));","highlight_start":60,"highlight_end":62}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/rdd/pair_rdd.rs","byte_start":2805,"byte_end":2807,"line_start":88,"line_end":88,"column_start":78,"column_end":80,"is_primary":true,"text":[{"text":"        let merge_combiners = Box::new(Fn!(move |(b1, b2)| { (func)((b1, b2)) }));","highlight_start":78,"highlight_end":80}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary braces around block return value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/pair_rdd.rs:88:60\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let merge_combiners = Box::new(Fn!(move |(b1, b2)| { (func)((b1, b2)) }));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these braces\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        let merge_combiners = Box::new(Fn!(move |(b1, b2)| \u001b[0m\u001b[0m\u001b[38;5;9m{ \u001b[0m\u001b[0m(func)((b1, b2))\u001b[0m\u001b[0m\u001b[38;5;9m }\u001b[0m\u001b[0m));\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        let merge_combiners = Box::new(Fn!(move |(b1, b2)| (func)((b1, b2))));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
{"message":"unused import: `Env`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/partitionwise_sampled_rdd.rs","byte_start":103,"byte_end":106,"line_start":3,"line_end":3,"column_start":18,"column_end":21,"is_primary":true,"text":[{"text":"use crate::env::{Env, RDDB_MAP};","highlight_start":18,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/rdd/partitionwise_sampled_rdd.rs","byte_start":103,"byte_end":108,"line_start":3,"line_end":3,"column_start":18,"column_end":23,"is_primary":true,"text":[{"text":"use crate::env::{Env, RDDB_MAP};","highlight_start":18,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Env`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/partitionwise_sampled_rdd.rs:3:18\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::env::{Env, RDDB_MAP};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"unused imports: `Func`, `SerFunc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/partitionwise_sampled_rdd.rs","byte_start":249,"byte_end":253,"line_start":7,"line_end":7,"column_start":49,"column_end":53,"is_primary":true,"text":[{"text":"use crate::serializable_traits::{AnyData, Data, Func, SerFunc};","highlight_start":49,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rdd/partitionwise_sampled_rdd.rs","byte_start":255,"byte_end":262,"line_start":7,"line_end":7,"column_start":55,"column_end":62,"is_primary":true,"text":[{"text":"use crate::serializable_traits::{AnyData, Data, Func, SerFunc};","highlight_start":55,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/rdd/partitionwise_sampled_rdd.rs","byte_start":247,"byte_end":262,"line_start":7,"line_end":7,"column_start":47,"column_end":62,"is_primary":true,"text":[{"text":"use crate::serializable_traits::{AnyData, Data, Func, SerFunc};","highlight_start":47,"highlight_end":62}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Func`, `SerFunc`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/partitionwise_sampled_rdd.rs:7:49\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::serializable_traits::{AnyData, Data, Func, SerFunc};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::Fn`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/partitionwise_sampled_rdd.rs","byte_start":335,"byte_end":344,"line_start":10,"line_end":10,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"use crate::Fn;","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/rdd/partitionwise_sampled_rdd.rs","byte_start":331,"byte_end":345,"line_start":10,"line_end":10,"column_start":1,"column_end":15,"is_primary":true,"text":[{"text":"use crate::Fn;","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::Fn`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/partitionwise_sampled_rdd.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::Fn;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `parking_lot::Mutex`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/partitionwise_sampled_rdd.rs","byte_start":350,"byte_end":368,"line_start":11,"line_end":11,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"use parking_lot::Mutex;","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/rdd/partitionwise_sampled_rdd.rs","byte_start":346,"byte_end":369,"line_start":11,"line_end":11,"column_start":1,"column_end":24,"is_primary":true,"text":[{"text":"use parking_lot::Mutex;","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `parking_lot::Mutex`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/partitionwise_sampled_rdd.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse parking_lot::Mutex;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `BOUNDED_MEM_CACHE`, `Env`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/shuffled_rdd.rs","byte_start":291,"byte_end":294,"line_start":10,"line_end":10,"column_start":18,"column_end":21,"is_primary":true,"text":[{"text":"use crate::env::{Env, BOUNDED_MEM_CACHE, RDDB_MAP};","highlight_start":18,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rdd/shuffled_rdd.rs","byte_start":296,"byte_end":313,"line_start":10,"line_end":10,"column_start":23,"column_end":40,"is_primary":true,"text":[{"text":"use crate::env::{Env, BOUNDED_MEM_CACHE, RDDB_MAP};","highlight_start":23,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/rdd/shuffled_rdd.rs","byte_start":291,"byte_end":315,"line_start":10,"line_end":10,"column_start":18,"column_end":42,"is_primary":true,"text":[{"text":"use crate::env::{Env, BOUNDED_MEM_CACHE, RDDB_MAP};","highlight_start":18,"highlight_end":42}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `BOUNDED_MEM_CACHE`, `Env`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/shuffled_rdd.rs:10:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::env::{Env, BOUNDED_MEM_CACHE, RDDB_MAP};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `Func`, `SerFunc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/shuffled_rdd.rs","byte_start":504,"byte_end":508,"line_start":15,"line_end":15,"column_start":49,"column_end":53,"is_primary":true,"text":[{"text":"use crate::serializable_traits::{AnyData, Data, Func, SerFunc};","highlight_start":49,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rdd/shuffled_rdd.rs","byte_start":510,"byte_end":517,"line_start":15,"line_end":15,"column_start":55,"column_end":62,"is_primary":true,"text":[{"text":"use crate::serializable_traits::{AnyData, Data, Func, SerFunc};","highlight_start":55,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/rdd/shuffled_rdd.rs","byte_start":502,"byte_end":517,"line_start":15,"line_end":15,"column_start":47,"column_end":62,"is_primary":true,"text":[{"text":"use crate::serializable_traits::{AnyData, Data, Func, SerFunc};","highlight_start":47,"highlight_end":62}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `Func`, `SerFunc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/shuffled_rdd.rs:15:49\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::serializable_traits::{AnyData, Data, Func, SerFunc};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `ShuffleError`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/shuffled_rdd.rs","byte_start":541,"byte_end":553,"line_start":16,"line_end":16,"column_start":22,"column_end":34,"is_primary":true,"text":[{"text":"use crate::shuffle::{ShuffleError, ShuffleFetcher};","highlight_start":22,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/rdd/shuffled_rdd.rs","byte_start":541,"byte_end":555,"line_start":16,"line_end":16,"column_start":22,"column_end":36,"is_primary":true,"text":[{"text":"use crate::shuffle::{ShuffleError, ShuffleFetcher};","highlight_start":22,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `ShuffleError`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/shuffled_rdd.rs:16:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::shuffle::{ShuffleError, ShuffleFetcher};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `parking_lot::Mutex`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/shuffled_rdd.rs","byte_start":601,"byte_end":619,"line_start":18,"line_end":18,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"use parking_lot::Mutex;","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/rdd/shuffled_rdd.rs","byte_start":597,"byte_end":620,"line_start":18,"line_end":18,"column_start":1,"column_end":24,"is_primary":true,"text":[{"text":"use parking_lot::Mutex;","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `parking_lot::Mutex`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/shuffled_rdd.rs:18:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse parking_lot::Mutex;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `sgx_types::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/shuffled_rdd.rs","byte_start":669,"byte_end":681,"line_start":20,"line_end":20,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"use sgx_types::*;","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/rdd/shuffled_rdd.rs","byte_start":665,"byte_end":682,"line_start":20,"line_end":20,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"use sgx_types::*;","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `sgx_types::*`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/shuffled_rdd.rs:20:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse sgx_types::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `Env`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/map_partitions_rdd.rs","byte_start":252,"byte_end":255,"line_start":11,"line_end":11,"column_start":18,"column_end":21,"is_primary":true,"text":[{"text":"use crate::env::{Env, RDDB_MAP};","highlight_start":18,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/rdd/map_partitions_rdd.rs","byte_start":252,"byte_end":257,"line_start":11,"line_end":11,"column_start":18,"column_end":23,"is_primary":true,"text":[{"text":"use crate::env::{Env, RDDB_MAP};","highlight_start":18,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Env`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/map_partitions_rdd.rs:11:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::env::{Env, RDDB_MAP};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"unused import: `std::marker::PhantomData`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/zip_rdd.rs","byte_start":23,"byte_end":47,"line_start":2,"line_end":2,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"use std::marker::PhantomData;","highlight_start":5,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/rdd/zip_rdd.rs","byte_start":19,"byte_end":48,"line_start":2,"line_end":2,"column_start":1,"column_end":30,"is_primary":true,"text":[{"text":"use std::marker::PhantomData;","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::marker::PhantomData`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/zip_rdd.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::marker::PhantomData;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `Env`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/zip_rdd.rs","byte_start":222,"byte_end":225,"line_start":8,"line_end":8,"column_start":18,"column_end":21,"is_primary":true,"text":[{"text":"use crate::env::{Env, RDDB_MAP};","highlight_start":18,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/rdd/zip_rdd.rs","byte_start":222,"byte_end":227,"line_start":8,"line_end":8,"column_start":18,"column_end":23,"is_primary":true,"text":[{"text":"use crate::env::{Env, RDDB_MAP};","highlight_start":18,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Env`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/zip_rdd.rs:8:18\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::env::{Env, RDDB_MAP};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"unused import: `parking_lot::Mutex`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/zip_rdd.rs","byte_start":370,"byte_end":388,"line_start":13,"line_end":13,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"use parking_lot::Mutex;","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/rdd/zip_rdd.rs","byte_start":366,"byte_end":389,"line_start":13,"line_end":13,"column_start":1,"column_end":24,"is_primary":true,"text":[{"text":"use parking_lot::Mutex;","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `parking_lot::Mutex`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/zip_rdd.rs:13:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse parking_lot::Mutex;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `TryRecvError`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/union_rdd.rs","byte_start":89,"byte_end":101,"line_start":3,"line_end":3,"column_start":49,"column_end":61,"is_primary":true,"text":[{"text":"    mpsc::{sync_channel, RecvError, SyncSender, TryRecvError},","highlight_start":49,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/rdd/union_rdd.rs","byte_start":87,"byte_end":101,"line_start":3,"line_end":3,"column_start":47,"column_end":61,"is_primary":true,"text":[{"text":"    mpsc::{sync_channel, RecvError, SyncSender, TryRecvError},","highlight_start":47,"highlight_end":61}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `TryRecvError`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/union_rdd.rs:3:49\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    mpsc::{sync_channel, RecvError, SyncSender, TryRecvError},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `BOUNDED_MEM_CACHE`, `Env`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/union_rdd.rs","byte_start":376,"byte_end":379,"line_start":13,"line_end":13,"column_start":18,"column_end":21,"is_primary":true,"text":[{"text":"use crate::env::{Env, BOUNDED_MEM_CACHE, RDDB_MAP};","highlight_start":18,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rdd/union_rdd.rs","byte_start":381,"byte_end":398,"line_start":13,"line_end":13,"column_start":23,"column_end":40,"is_primary":true,"text":[{"text":"use crate::env::{Env, BOUNDED_MEM_CACHE, RDDB_MAP};","highlight_start":23,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/rdd/union_rdd.rs","byte_start":376,"byte_end":400,"line_start":13,"line_end":13,"column_start":18,"column_end":42,"is_primary":true,"text":[{"text":"use crate::env::{Env, BOUNDED_MEM_CACHE, RDDB_MAP};","highlight_start":18,"highlight_end":42}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `BOUNDED_MEM_CACHE`, `Env`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/union_rdd.rs:13:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::env::{Env, BOUNDED_MEM_CACHE, RDDB_MAP};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `parking_lot::Mutex`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/union_rdd.rs","byte_start":664,"byte_end":682,"line_start":20,"line_end":20,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"use parking_lot::Mutex;","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/rdd/union_rdd.rs","byte_start":660,"byte_end":683,"line_start":20,"line_end":20,"column_start":1,"column_end":24,"is_primary":true,"text":[{"text":"use parking_lot::Mutex;","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `parking_lot::Mutex`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/union_rdd.rs:20:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse parking_lot::Mutex;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unnecessary braces around block return value","code":{"code":"unused_braces","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":44485,"byte_end":44487,"line_start":1552,"line_end":1552,"column_start":46,"column_end":48,"is_primary":true,"text":[{"text":"              -> Box<dyn Iterator<Item = _>> { (func)(items) });","highlight_start":46,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rdd/rdd.rs","byte_start":44500,"byte_end":44502,"line_start":1552,"line_end":1552,"column_start":61,"column_end":63,"is_primary":true,"text":[{"text":"              -> Box<dyn Iterator<Item = _>> { (func)(items) });","highlight_start":61,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these braces","code":null,"level":"help","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":44485,"byte_end":44487,"line_start":1552,"line_end":1552,"column_start":46,"column_end":48,"is_primary":true,"text":[{"text":"              -> Box<dyn Iterator<Item = _>> { (func)(items) });","highlight_start":46,"highlight_end":48}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/rdd/rdd.rs","byte_start":44500,"byte_end":44502,"line_start":1552,"line_end":1552,"column_start":61,"column_end":63,"is_primary":true,"text":[{"text":"              -> Box<dyn Iterator<Item = _>> { (func)(items) });","highlight_start":61,"highlight_end":63}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary braces around block return value\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/rdd.rs:1552:46\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1552\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              -> Box<dyn Iterator<Item = _>> { (func)(items) });\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these braces\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1552\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m              -> Box<dyn Iterator<Item = _>> \u001b[0m\u001b[0m\u001b[38;5;9m{ \u001b[0m\u001b[0m(func)(items)\u001b[0m\u001b[0m\u001b[38;5;9m }\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1552\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m              -> Box<dyn Iterator<Item = _>> (func)(items));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
{"message":"unnecessary braces around block return value","code":{"code":"unused_braces","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":61038,"byte_end":61040,"line_start":1969,"line_end":1969,"column_start":12,"column_end":14,"is_primary":true,"text":[{"text":"        )| { data_iter.collect::<Vec<_>>() });","highlight_start":12,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rdd/rdd.rs","byte_start":61069,"byte_end":61071,"line_start":1969,"line_end":1969,"column_start":43,"column_end":45,"is_primary":true,"text":[{"text":"        )| { data_iter.collect::<Vec<_>>() });","highlight_start":43,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these braces","code":null,"level":"help","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":61038,"byte_end":61040,"line_start":1969,"line_end":1969,"column_start":12,"column_end":14,"is_primary":true,"text":[{"text":"        )| { data_iter.collect::<Vec<_>>() });","highlight_start":12,"highlight_end":14}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/rdd/rdd.rs","byte_start":61069,"byte_end":61071,"line_start":1969,"line_end":1969,"column_start":43,"column_end":45,"is_primary":true,"text":[{"text":"        )| { data_iter.collect::<Vec<_>>() });","highlight_start":43,"highlight_end":45}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary braces around block return value\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/rdd.rs:1969:12\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1969\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        )| { data_iter.collect::<Vec<_>>() });\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these braces\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1969\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        )| \u001b[0m\u001b[0m\u001b[38;5;9m{ \u001b[0m\u001b[0mdata_iter.collect::<Vec<_>>()\u001b[0m\u001b[0m\u001b[38;5;9m }\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1969\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        )| data_iter.collect::<Vec<_>>());\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
{"message":"unnecessary braces around block return value","code":{"code":"unused_braces","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":61803,"byte_end":61805,"line_start":1993,"line_end":1993,"column_start":12,"column_end":14,"is_primary":true,"text":[{"text":"        )| { iter.count() as u64 });","highlight_start":12,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rdd/rdd.rs","byte_start":61824,"byte_end":61826,"line_start":1993,"line_end":1993,"column_start":33,"column_end":35,"is_primary":true,"text":[{"text":"        )| { iter.count() as u64 });","highlight_start":33,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these braces","code":null,"level":"help","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":61803,"byte_end":61805,"line_start":1993,"line_end":1993,"column_start":12,"column_end":14,"is_primary":true,"text":[{"text":"        )| { iter.count() as u64 });","highlight_start":12,"highlight_end":14}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/rdd/rdd.rs","byte_start":61824,"byte_end":61826,"line_start":1993,"line_end":1993,"column_start":33,"column_end":35,"is_primary":true,"text":[{"text":"        )| { iter.count() as u64 });","highlight_start":33,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary braces around block return value\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/rdd.rs:1993:12\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1993\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        )| { iter.count() as u64 });\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these braces\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1993\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        )| \u001b[0m\u001b[0m\u001b[38;5;9m{ \u001b[0m\u001b[0miter.count() as u64\u001b[0m\u001b[0m\u001b[38;5;9m }\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1993\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        )| iter.count() as u64);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
{"message":"unnecessary braces around block return value","code":{"code":"unused_braces","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":69463,"byte_end":69465,"line_start":2202,"line_end":2202,"column_start":20,"column_end":22,"is_primary":true,"text":[{"text":"                )| { iter.take(left).collect::<Vec<Self::Item>>() });","highlight_start":20,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rdd/rdd.rs","byte_start":69509,"byte_end":69511,"line_start":2202,"line_end":2202,"column_start":66,"column_end":68,"is_primary":true,"text":[{"text":"                )| { iter.take(left).collect::<Vec<Self::Item>>() });","highlight_start":66,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these braces","code":null,"level":"help","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":69463,"byte_end":69465,"line_start":2202,"line_end":2202,"column_start":20,"column_end":22,"is_primary":true,"text":[{"text":"                )| { iter.take(left).collect::<Vec<Self::Item>>() });","highlight_start":20,"highlight_end":22}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/rdd/rdd.rs","byte_start":69509,"byte_end":69511,"line_start":2202,"line_end":2202,"column_start":66,"column_end":68,"is_primary":true,"text":[{"text":"                )| { iter.take(left).collect::<Vec<Self::Item>>() });","highlight_start":66,"highlight_end":68}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary braces around block return value\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/rdd.rs:2202:20\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                )| { iter.take(left).collect::<Vec<Self::Item>>() });\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these braces\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m                )| \u001b[0m\u001b[0m\u001b[38;5;9m{ \u001b[0m\u001b[0miter.take(left).collect::<Vec<Self::Item>>()\u001b[0m\u001b[0m\u001b[38;5;9m }\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2202\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m                )| iter.take(left).collect::<Vec<Self::Item>>());\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
{"message":"unnecessary braces around block return value","code":{"code":"unused_braces","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":91997,"byte_end":91999,"line_start":2831,"line_end":2831,"column_start":19,"column_end":21,"is_primary":true,"text":[{"text":"         -> usize { iter.count() });","highlight_start":19,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/rdd/rdd.rs","byte_start":92011,"byte_end":92013,"line_start":2831,"line_end":2831,"column_start":33,"column_end":35,"is_primary":true,"text":[{"text":"         -> usize { iter.count() });","highlight_start":33,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these braces","code":null,"level":"help","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":91997,"byte_end":91999,"line_start":2831,"line_end":2831,"column_start":19,"column_end":21,"is_primary":true,"text":[{"text":"         -> usize { iter.count() });","highlight_start":19,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/rdd/rdd.rs","byte_start":92011,"byte_end":92013,"line_start":2831,"line_end":2831,"column_start":33,"column_end":35,"is_primary":true,"text":[{"text":"         -> usize { iter.count() });","highlight_start":33,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary braces around block return value\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/rdd.rs:2831:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2831\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         -> usize { iter.count() });\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these braces\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2831\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m         -> usize \u001b[0m\u001b[0m\u001b[38;5;9m{ \u001b[0m\u001b[0miter.count()\u001b[0m\u001b[0m\u001b[38;5;9m }\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2831\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m         -> usize iter.count());\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
{"message":"unused import: `NetworkError`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/scheduler/distributed_scheduler.rs","byte_start":366,"byte_end":378,"line_start":13,"line_end":13,"column_start":27,"column_end":39,"is_primary":true,"text":[{"text":"use crate::error::{Error, NetworkError, Result};","highlight_start":27,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/scheduler/distributed_scheduler.rs","byte_start":364,"byte_end":378,"line_start":13,"line_end":13,"column_start":25,"column_end":39,"is_primary":true,"text":[{"text":"use crate::error::{Error, NetworkError, Result};","highlight_start":25,"highlight_end":39}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `NetworkError`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/scheduler/distributed_scheduler.rs:13:27\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::error::{Error, NetworkError, Result};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::serialized_data_capnp::serialized_data`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/scheduler/distributed_scheduler.rs","byte_start":904,"byte_end":949,"line_start":23,"line_end":23,"column_start":5,"column_end":50,"is_primary":true,"text":[{"text":"use crate::serialized_data_capnp::serialized_data;","highlight_start":5,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/scheduler/distributed_scheduler.rs","byte_start":900,"byte_end":950,"line_start":23,"line_end":23,"column_start":1,"column_end":51,"is_primary":true,"text":[{"text":"use crate::serialized_data_capnp::serialized_data;","highlight_start":1,"highlight_end":51}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::serialized_data_capnp::serialized_data`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/scheduler/distributed_scheduler.rs:23:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::serialized_data_capnp::serialized_data;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::marker::PhantomData`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/scheduler/result_task.rs","byte_start":27,"byte_end":51,"line_start":2,"line_end":2,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"use std::marker::PhantomData;","highlight_start":5,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/scheduler/result_task.rs","byte_start":23,"byte_end":52,"line_start":2,"line_end":2,"column_start":1,"column_end":30,"is_primary":true,"text":[{"text":"use std::marker::PhantomData;","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::marker::PhantomData`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/scheduler/result_task.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::marker::PhantomData;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::shuffle::ShuffleFetcher`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/scheduler/result_task.rs","byte_start":312,"byte_end":342,"line_start":12,"line_end":12,"column_start":5,"column_end":35,"is_primary":true,"text":[{"text":"use crate::shuffle::ShuffleFetcher;","highlight_start":5,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/scheduler/result_task.rs","byte_start":308,"byte_end":343,"line_start":12,"line_end":12,"column_start":1,"column_end":36,"is_primary":true,"text":[{"text":"use crate::shuffle::ShuffleFetcher;","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::shuffle::ShuffleFetcher`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/scheduler/result_task.rs:12:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::shuffle::ShuffleFetcher;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::dependency::DepInfo`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/shuffle/shuffle_fetcher.rs","byte_start":113,"byte_end":139,"line_start":5,"line_end":5,"column_start":5,"column_end":31,"is_primary":true,"text":[{"text":"use crate::dependency::DepInfo;","highlight_start":5,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/shuffle/shuffle_fetcher.rs","byte_start":109,"byte_end":140,"line_start":5,"line_end":5,"column_start":1,"column_end":32,"is_primary":true,"text":[{"text":"use crate::dependency::DepInfo;","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::dependency::DepInfo`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/shuffle/shuffle_fetcher.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::dependency::DepInfo;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::rdd::ItemE`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/shuffle/shuffle_fetcher.rs","byte_start":209,"byte_end":226,"line_start":8,"line_end":8,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"use crate::rdd::ItemE;","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/shuffle/shuffle_fetcher.rs","byte_start":205,"byte_end":227,"line_start":8,"line_end":8,"column_start":1,"column_end":23,"is_primary":true,"text":[{"text":"use crate::rdd::ItemE;","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::rdd::ItemE`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/shuffle/shuffle_fetcher.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::rdd::ItemE;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `hyper::body::Bytes`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/shuffle/shuffle_fetcher.rs","byte_start":360,"byte_end":378,"line_start":13,"line_end":13,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"use hyper::body::Bytes;","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/shuffle/shuffle_fetcher.rs","byte_start":356,"byte_end":379,"line_start":13,"line_end":13,"column_start":1,"column_end":24,"is_primary":true,"text":[{"text":"use hyper::body::Bytes;","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `hyper::body::Bytes`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/shuffle/shuffle_fetcher.rs:13:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse hyper::body::Bytes;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `Error`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/utils/mod.rs","byte_start":121,"byte_end":126,"line_start":6,"line_end":6,"column_start":20,"column_end":25,"is_primary":true,"text":[{"text":"use crate::error::{Error, NetworkError};","highlight_start":20,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/utils/mod.rs","byte_start":121,"byte_end":128,"line_start":6,"line_end":6,"column_start":20,"column_end":27,"is_primary":true,"text":[{"text":"use crate::error::{Error, NetworkError};","highlight_start":20,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Error`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/utils/mod.rs:6:20\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::error::{Error, NetworkError};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"message":"unused import: `serialized_data`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/utils/mod.rs","byte_start":178,"byte_end":193,"line_start":7,"line_end":7,"column_start":36,"column_end":51,"is_primary":true,"text":[{"text":"use crate::serialized_data_capnp::{serialized_data, serialized_data_list};","highlight_start":36,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/utils/mod.rs","byte_start":178,"byte_end":195,"line_start":7,"line_end":7,"column_start":36,"column_end":53,"is_primary":true,"text":[{"text":"use crate::serialized_data_capnp::{serialized_data, serialized_data_list};","highlight_start":36,"highlight_end":53}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `serialized_data`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/utils/mod.rs:7:36\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::serialized_data_capnp::{serialized_data, serialized_data_list};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `ReaderOptions`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/utils/mod.rs","byte_start":305,"byte_end":318,"line_start":9,"line_end":9,"column_start":75,"column_end":88,"is_primary":true,"text":[{"text":"    message::{Builder as MsgBuilder, HeapAllocator, Reader as CpnpReader, ReaderOptions},","highlight_start":75,"highlight_end":88}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/utils/mod.rs","byte_start":303,"byte_end":318,"line_start":9,"line_end":9,"column_start":73,"column_end":88,"is_primary":true,"text":[{"text":"    message::{Builder as MsgBuilder, HeapAllocator, Reader as CpnpReader, ReaderOptions},","highlight_start":73,"highlight_end":88}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `ReaderOptions`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/utils/mod.rs:9:75\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    message::{Builder as MsgBuilder, HeapAllocator, Reader as CpnpReader, ReaderOptions},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/executor.rs","byte_start":2045,"byte_end":2057,"line_start":61,"line_end":61,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"        let mut listener = TcpListener::bind(addr)","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_mut)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/executor.rs","byte_start":2045,"byte_end":2049,"line_start":61,"line_end":61,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut listener = TcpListener::bind(addr)","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/executor.rs:61:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut listener = TcpListener::bind(addr)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_mut)]` on by default\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/executor.rs","byte_start":2175,"byte_end":2185,"line_start":64,"line_end":64,"column_start":23,"column_end":33,"is_primary":true,"text":[{"text":"        while let Ok((mut stream, _)) = listener.accept().await {","highlight_start":23,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/executor.rs","byte_start":2175,"byte_end":2179,"line_start":64,"line_end":64,"column_start":23,"column_end":27,"is_primary":true,"text":[{"text":"        while let Ok((mut stream, _)) = listener.accept().await {","highlight_start":23,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/executor.rs:64:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        while let Ok((mut stream, _)) = listener.accept().await {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/executor.rs","byte_start":6828,"byte_end":6840,"line_start":177,"line_end":177,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"        let mut listener = TcpListener::bind(addr)","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/executor.rs","byte_start":6828,"byte_end":6832,"line_start":177,"line_end":177,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut listener = TcpListener::bind(addr)","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/executor.rs:177:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut listener = TcpListener::bind(addr)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"unused import: `tokio_stream::StreamExt`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/cache_tracker.rs","byte_start":633,"byte_end":656,"line_start":20,"line_end":20,"column_start":5,"column_end":28,"is_primary":true,"text":[{"text":"use tokio_stream::StreamExt;","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `tokio_stream::StreamExt`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/cache_tracker.rs:20:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse tokio_stream::StreamExt;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `tokio_stream::StreamExt`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/map_output_tracker.rs","byte_start":522,"byte_end":545,"line_start":18,"line_end":18,"column_start":5,"column_end":28,"is_primary":true,"text":[{"text":"use tokio_stream::StreamExt;","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `tokio_stream::StreamExt`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/map_output_tracker.rs:18:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse tokio_stream::StreamExt;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::rdd::RddBase`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/shuffle/shuffle_map_task.rs","byte_start":135,"byte_end":154,"line_start":7,"line_end":7,"column_start":5,"column_end":24,"is_primary":true,"text":[{"text":"use crate::rdd::RddBase;","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::rdd::RddBase`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/shuffle/shuffle_map_task.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse crate::rdd::RddBase;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused variable: `child`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/context.rs","byte_start":7167,"byte_end":7172,"line_start":243,"line_end":243,"column_start":13,"column_end":18,"is_primary":true,"text":[{"text":"        let child = thread::spawn(move || {","highlight_start":13,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/context.rs","byte_start":7167,"byte_end":7172,"line_start":243,"line_end":243,"column_start":13,"column_end":18,"is_primary":true,"text":[{"text":"        let child = thread::spawn(move || {","highlight_start":13,"highlight_end":18}],"label":null,"suggested_replacement":"_child","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `child`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/context.rs:243:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m243\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let child = thread::spawn(move || {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_child`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `count`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/dependency.rs","byte_start":12592,"byte_end":12597,"line_start":406,"line_end":406,"column_start":18,"column_end":23,"is_primary":true,"text":[{"text":"            for (count, i) in iter","highlight_start":18,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/dependency.rs","byte_start":12592,"byte_end":12597,"line_start":406,"line_end":406,"column_start":18,"column_end":23,"is_primary":true,"text":[{"text":"            for (count, i) in iter","highlight_start":18,"highlight_end":23}],"label":null,"suggested_replacement":"_count","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `count`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/dependency.rs:406:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m406\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            for (count, i) in iter\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_count`\u001b[0m\n\n"}
{"message":"unused variable: `eid`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/env.rs","byte_start":1735,"byte_end":1738,"line_start":51,"line_end":51,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"        let eid = Env::get()","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/env.rs","byte_start":1735,"byte_end":1738,"line_start":51,"line_end":51,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"        let eid = Env::get()","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":"_eid","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `eid`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/env.rs:51:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let eid = Env::get()\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_eid`\u001b[0m\n\n"}
{"message":"unused variable: `tid`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":17256,"byte_end":17259,"line_start":625,"line_end":625,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"    let tid: u64 = thread::current().id().as_u64().into();","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":17256,"byte_end":17259,"line_start":625,"line_end":625,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"    let tid: u64 = thread::current().id().as_u64().into();","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"_tid","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `tid`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/rdd.rs:625:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m625\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let tid: u64 = thread::current().id().as_u64().into();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_tid`\u001b[0m\n\n"}
{"message":"unused variable: `f`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":47727,"byte_end":47728,"line_start":1641,"line_end":1641,"column_start":32,"column_end":33,"is_primary":true,"text":[{"text":"    fn secure_reduce<F>(&self, f: F) -> Result<Text<Self::Item, ItemE>>","highlight_start":32,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":47727,"byte_end":47728,"line_start":1641,"line_end":1641,"column_start":32,"column_end":33,"is_primary":true,"text":[{"text":"    fn secure_reduce<F>(&self, f: F) -> Result<Text<Self::Item, ItemE>>","highlight_start":32,"highlight_end":33}],"label":null,"suggested_replacement":"_f","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `f`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/rdd.rs:1641:32\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1641\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn secure_reduce<F>(&self, f: F) -> Result<Text<Self::Item, ItemE>>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_f`\u001b[0m\n\n"}
{"message":"unused variable: `init`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":51318,"byte_end":51322,"line_start":1727,"line_end":1727,"column_start":30,"column_end":34,"is_primary":true,"text":[{"text":"    fn secure_fold<F>(&self, init: Self::Item, f: F) -> Result<Text<Self::Item, ItemE>>","highlight_start":30,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":51318,"byte_end":51322,"line_start":1727,"line_end":1727,"column_start":30,"column_end":34,"is_primary":true,"text":[{"text":"    fn secure_fold<F>(&self, init: Self::Item, f: F) -> Result<Text<Self::Item, ItemE>>","highlight_start":30,"highlight_end":34}],"label":null,"suggested_replacement":"_init","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `init`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/rdd.rs:1727:30\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1727\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn secure_fold<F>(&self, init: Self::Item, f: F) -> Result<Text<Self::Item, ItemE>>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_init`\u001b[0m\n\n"}
{"message":"unused variable: `f`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":51336,"byte_end":51337,"line_start":1727,"line_end":1727,"column_start":48,"column_end":49,"is_primary":true,"text":[{"text":"    fn secure_fold<F>(&self, init: Self::Item, f: F) -> Result<Text<Self::Item, ItemE>>","highlight_start":48,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":51336,"byte_end":51337,"line_start":1727,"line_end":1727,"column_start":48,"column_end":49,"is_primary":true,"text":[{"text":"    fn secure_fold<F>(&self, init: Self::Item, f: F) -> Result<Text<Self::Item, ItemE>>","highlight_start":48,"highlight_end":49}],"label":null,"suggested_replacement":"_f","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `f`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/rdd.rs:1727:48\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1727\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn secure_fold<F>(&self, init: Self::Item, f: F) -> Result<Text<Self::Item, ItemE>>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_f`\u001b[0m\n\n"}
{"message":"unused variable: `init`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":54788,"byte_end":54792,"line_start":1812,"line_end":1812,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"        init: U,","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":54788,"byte_end":54792,"line_start":1812,"line_end":1812,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"        init: U,","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"_init","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `init`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/rdd.rs:1812:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1812\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        init: U,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_init`\u001b[0m\n\n"}
{"message":"unused variable: `seq_fn`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":54805,"byte_end":54811,"line_start":1813,"line_end":1813,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"        seq_fn: SF,","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":54805,"byte_end":54811,"line_start":1813,"line_end":1813,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"        seq_fn: SF,","highlight_start":9,"highlight_end":15}],"label":null,"suggested_replacement":"_seq_fn","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `seq_fn`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/rdd.rs:1813:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1813\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        seq_fn: SF,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_seq_fn`\u001b[0m\n\n"}
{"message":"unused variable: `comb_fn`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":54825,"byte_end":54832,"line_start":1814,"line_end":1814,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"        comb_fn: CF,","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":54825,"byte_end":54832,"line_start":1814,"line_end":1814,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"        comb_fn: CF,","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"_comb_fn","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `comb_fn`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/rdd.rs:1814:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1814\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        comb_fn: CF,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_comb_fn`\u001b[0m\n\n"}
{"message":"unused variable: `marks_iter`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":60836,"byte_end":60846,"line_start":1963,"line_end":1963,"column_start":39,"column_end":49,"is_primary":true,"text":[{"text":"        let cl = Fn!(|(_, (data_iter, marks_iter)): (","highlight_start":39,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":60836,"byte_end":60846,"line_start":1963,"line_end":1963,"column_start":39,"column_end":49,"is_primary":true,"text":[{"text":"        let cl = Fn!(|(_, (data_iter, marks_iter)): (","highlight_start":39,"highlight_end":49}],"label":null,"suggested_replacement":"_marks_iter","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `marks_iter`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/rdd.rs:1963:39\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1963\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let cl = Fn!(|(_, (data_iter, marks_iter)): (\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_marks_iter`\u001b[0m\n\n"}
{"message":"unused variable: `marks_iter`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":71326,"byte_end":71336,"line_start":2255,"line_end":2255,"column_start":65,"column_end":75,"is_primary":true,"text":[{"text":"            let take_from_partition = Fn!(move |(_, (data_iter, marks_iter)): (","highlight_start":65,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":71326,"byte_end":71336,"line_start":2255,"line_end":2255,"column_start":65,"column_end":75,"is_primary":true,"text":[{"text":"            let take_from_partition = Fn!(move |(_, (data_iter, marks_iter)): (","highlight_start":65,"highlight_end":75}],"label":null,"suggested_replacement":"_marks_iter","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `marks_iter`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/rdd.rs:2255:65\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2255\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let take_from_partition = Fn!(move |(_, (data_iter, marks_iter)): (\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_marks_iter`\u001b[0m\n\n"}
{"message":"unused variable: `local_num_splits`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/io/local_file_reader.rs","byte_start":2462,"byte_end":2478,"line_start":78,"line_end":78,"column_start":13,"column_end":29,"is_primary":true,"text":[{"text":"        let local_num_splits = reader.get_executor_partitions() as usize;","highlight_start":13,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/io/local_file_reader.rs","byte_start":2462,"byte_end":2478,"line_start":78,"line_end":78,"column_start":13,"column_end":29,"is_primary":true,"text":[{"text":"        let local_num_splits = reader.get_executor_partitions() as usize;","highlight_start":13,"highlight_end":29}],"label":null,"suggested_replacement":"_local_num_splits","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `local_num_splits`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/io/local_file_reader.rs:78:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let local_num_splits = reader.get_executor_partitions() as usize;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_local_num_splits`\u001b[0m\n\n"}
{"message":"unused variable: `local_num_splits`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/io/local_file_reader.rs","byte_start":3904,"byte_end":3920,"line_start":115,"line_end":115,"column_start":13,"column_end":29,"is_primary":true,"text":[{"text":"        let local_num_splits = reader.get_executor_partitions() as usize;","highlight_start":13,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/io/local_file_reader.rs","byte_start":3904,"byte_end":3920,"line_start":115,"line_end":115,"column_start":13,"column_end":29,"is_primary":true,"text":[{"text":"        let local_num_splits = reader.get_executor_partitions() as usize;","highlight_start":13,"highlight_end":29}],"label":null,"suggested_replacement":"_local_num_splits","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `local_num_splits`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/io/local_file_reader.rs:115:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m115\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let local_num_splits = reader.get_executor_partitions() as usize;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_local_num_splits`\u001b[0m\n\n"}
{"message":"unused variable: `ptrs`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/io/local_file_reader.rs","byte_start":13593,"byte_end":13597,"line_start":394,"line_end":394,"column_start":33,"column_end":37,"is_primary":true,"text":[{"text":"        fn free_data_enc(&self, ptrs: (usize, usize)) {","highlight_start":33,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/io/local_file_reader.rs","byte_start":14974,"byte_end":15003,"line_start":450,"line_end":450,"column_start":5,"column_end":34,"is_primary":false,"text":[{"text":"    impl_common_lfs_rddb_funcs!();","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_common_lfs_rddb_funcs!","def_site_span":{"file_name":"src/io/local_file_reader.rs","byte_start":13350,"byte_end":14859,"line_start":384,"line_end":444,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_common_lfs_rddb_funcs {","highlight_start":1,"highlight_end":42},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        fn cache(&self) {","highlight_start":1,"highlight_end":26},{"text":"            panic!(\"no cache for LocalFsReader\");","highlight_start":1,"highlight_end":50},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn should_cache(&self) -> bool {","highlight_start":1,"highlight_end":41},{"text":"            false","highlight_start":1,"highlight_end":18},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn free_data_enc(&self, ptrs: (usize, usize)) {","highlight_start":1,"highlight_end":56},{"text":"            unreachable!()","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_rdd_id(&self) -> usize {","highlight_start":1,"highlight_end":40},{"text":"            self.id","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_op_id(&self) -> OpId {","highlight_start":1,"highlight_end":38},{"text":"            self.op_id","highlight_start":1,"highlight_end":23},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_op_ids(&self, op_ids: &mut Vec<OpId>) {","highlight_start":1,"highlight_end":55},{"text":"            op_ids.push(self.get_op_id());","highlight_start":1,"highlight_end":43},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_context(&self) -> Arc<Context> {","highlight_start":1,"highlight_end":48},{"text":"            self.context.upgrade().unwrap()","highlight_start":1,"highlight_end":44},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_dependencies(&self) -> Vec<Dependency> {","highlight_start":1,"highlight_end":56},{"text":"            vec![]","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_secure(&self) -> bool {","highlight_start":1,"highlight_end":39},{"text":"            self.sec_decoder.is_some()","highlight_start":1,"highlight_end":39},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn move_allocation(&self, value_ptr: (usize, usize)) -> ((usize, usize), usize) {","highlight_start":1,"highlight_end":90},{"text":"            unreachable!()","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn is_pinned(&self) -> bool {","highlight_start":1,"highlight_end":38},{"text":"            true","highlight_start":1,"highlight_end":17},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn iterator_raw(","highlight_start":1,"highlight_end":25},{"text":"            &self,","highlight_start":1,"highlight_end":19},{"text":"            stage_id: usize,","highlight_start":1,"highlight_end":29},{"text":"            split: Box<dyn Split>,","highlight_start":1,"highlight_end":35},{"text":"            acc_arg: &mut AccArg,","highlight_start":1,"highlight_end":34},{"text":"            tx: SyncSender<(usize, usize)>,","highlight_start":1,"highlight_end":44},{"text":"        ) -> Result<Vec<JoinHandle<()>>> {","highlight_start":1,"highlight_end":43},{"text":"            self.secure_compute(stage_id, split, acc_arg, tx)","highlight_start":1,"highlight_end":62},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        default fn iterator_any(&self, split: Box<dyn Split>) -> Result<Box<dyn AnyData>> {","highlight_start":1,"highlight_end":92},{"text":"            Ok(Box::new(self.iterator(split)?.collect::<Vec<_>>()))","highlight_start":1,"highlight_end":68},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/io/local_file_reader.rs","byte_start":13593,"byte_end":13597,"line_start":394,"line_end":394,"column_start":33,"column_end":37,"is_primary":true,"text":[{"text":"        fn free_data_enc(&self, ptrs: (usize, usize)) {","highlight_start":33,"highlight_end":37}],"label":null,"suggested_replacement":"_ptrs","suggestion_applicability":"MachineApplicable","expansion":{"span":{"file_name":"src/io/local_file_reader.rs","byte_start":14974,"byte_end":15003,"line_start":450,"line_end":450,"column_start":5,"column_end":34,"is_primary":false,"text":[{"text":"    impl_common_lfs_rddb_funcs!();","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_common_lfs_rddb_funcs!","def_site_span":{"file_name":"src/io/local_file_reader.rs","byte_start":13350,"byte_end":14859,"line_start":384,"line_end":444,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_common_lfs_rddb_funcs {","highlight_start":1,"highlight_end":42},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        fn cache(&self) {","highlight_start":1,"highlight_end":26},{"text":"            panic!(\"no cache for LocalFsReader\");","highlight_start":1,"highlight_end":50},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn should_cache(&self) -> bool {","highlight_start":1,"highlight_end":41},{"text":"            false","highlight_start":1,"highlight_end":18},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn free_data_enc(&self, ptrs: (usize, usize)) {","highlight_start":1,"highlight_end":56},{"text":"            unreachable!()","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_rdd_id(&self) -> usize {","highlight_start":1,"highlight_end":40},{"text":"            self.id","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_op_id(&self) -> OpId {","highlight_start":1,"highlight_end":38},{"text":"            self.op_id","highlight_start":1,"highlight_end":23},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_op_ids(&self, op_ids: &mut Vec<OpId>) {","highlight_start":1,"highlight_end":55},{"text":"            op_ids.push(self.get_op_id());","highlight_start":1,"highlight_end":43},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_context(&self) -> Arc<Context> {","highlight_start":1,"highlight_end":48},{"text":"            self.context.upgrade().unwrap()","highlight_start":1,"highlight_end":44},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_dependencies(&self) -> Vec<Dependency> {","highlight_start":1,"highlight_end":56},{"text":"            vec![]","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_secure(&self) -> bool {","highlight_start":1,"highlight_end":39},{"text":"            self.sec_decoder.is_some()","highlight_start":1,"highlight_end":39},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn move_allocation(&self, value_ptr: (usize, usize)) -> ((usize, usize), usize) {","highlight_start":1,"highlight_end":90},{"text":"            unreachable!()","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn is_pinned(&self) -> bool {","highlight_start":1,"highlight_end":38},{"text":"            true","highlight_start":1,"highlight_end":17},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn iterator_raw(","highlight_start":1,"highlight_end":25},{"text":"            &self,","highlight_start":1,"highlight_end":19},{"text":"            stage_id: usize,","highlight_start":1,"highlight_end":29},{"text":"            split: Box<dyn Split>,","highlight_start":1,"highlight_end":35},{"text":"            acc_arg: &mut AccArg,","highlight_start":1,"highlight_end":34},{"text":"            tx: SyncSender<(usize, usize)>,","highlight_start":1,"highlight_end":44},{"text":"        ) -> Result<Vec<JoinHandle<()>>> {","highlight_start":1,"highlight_end":43},{"text":"            self.secure_compute(stage_id, split, acc_arg, tx)","highlight_start":1,"highlight_end":62},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        default fn iterator_any(&self, split: Box<dyn Split>) -> Result<Box<dyn AnyData>> {","highlight_start":1,"highlight_end":92},{"text":"            Ok(Box::new(self.iterator(split)?.collect::<Vec<_>>()))","highlight_start":1,"highlight_end":68},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `ptrs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/io/local_file_reader.rs:394:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m394\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        fn free_data_enc(&self, ptrs: (usize, usize)) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_ptrs`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m450\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    impl_common_lfs_rddb_funcs!();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `impl_common_lfs_rddb_funcs` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"unused variable: `value_ptr`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/io/local_file_reader.rs","byte_start":14219,"byte_end":14228,"line_start":422,"line_end":422,"column_start":35,"column_end":44,"is_primary":true,"text":[{"text":"        fn move_allocation(&self, value_ptr: (usize, usize)) -> ((usize, usize), usize) {","highlight_start":35,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/io/local_file_reader.rs","byte_start":14974,"byte_end":15003,"line_start":450,"line_end":450,"column_start":5,"column_end":34,"is_primary":false,"text":[{"text":"    impl_common_lfs_rddb_funcs!();","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_common_lfs_rddb_funcs!","def_site_span":{"file_name":"src/io/local_file_reader.rs","byte_start":13350,"byte_end":14859,"line_start":384,"line_end":444,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_common_lfs_rddb_funcs {","highlight_start":1,"highlight_end":42},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        fn cache(&self) {","highlight_start":1,"highlight_end":26},{"text":"            panic!(\"no cache for LocalFsReader\");","highlight_start":1,"highlight_end":50},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn should_cache(&self) -> bool {","highlight_start":1,"highlight_end":41},{"text":"            false","highlight_start":1,"highlight_end":18},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn free_data_enc(&self, ptrs: (usize, usize)) {","highlight_start":1,"highlight_end":56},{"text":"            unreachable!()","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_rdd_id(&self) -> usize {","highlight_start":1,"highlight_end":40},{"text":"            self.id","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_op_id(&self) -> OpId {","highlight_start":1,"highlight_end":38},{"text":"            self.op_id","highlight_start":1,"highlight_end":23},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_op_ids(&self, op_ids: &mut Vec<OpId>) {","highlight_start":1,"highlight_end":55},{"text":"            op_ids.push(self.get_op_id());","highlight_start":1,"highlight_end":43},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_context(&self) -> Arc<Context> {","highlight_start":1,"highlight_end":48},{"text":"            self.context.upgrade().unwrap()","highlight_start":1,"highlight_end":44},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_dependencies(&self) -> Vec<Dependency> {","highlight_start":1,"highlight_end":56},{"text":"            vec![]","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_secure(&self) -> bool {","highlight_start":1,"highlight_end":39},{"text":"            self.sec_decoder.is_some()","highlight_start":1,"highlight_end":39},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn move_allocation(&self, value_ptr: (usize, usize)) -> ((usize, usize), usize) {","highlight_start":1,"highlight_end":90},{"text":"            unreachable!()","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn is_pinned(&self) -> bool {","highlight_start":1,"highlight_end":38},{"text":"            true","highlight_start":1,"highlight_end":17},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn iterator_raw(","highlight_start":1,"highlight_end":25},{"text":"            &self,","highlight_start":1,"highlight_end":19},{"text":"            stage_id: usize,","highlight_start":1,"highlight_end":29},{"text":"            split: Box<dyn Split>,","highlight_start":1,"highlight_end":35},{"text":"            acc_arg: &mut AccArg,","highlight_start":1,"highlight_end":34},{"text":"            tx: SyncSender<(usize, usize)>,","highlight_start":1,"highlight_end":44},{"text":"        ) -> Result<Vec<JoinHandle<()>>> {","highlight_start":1,"highlight_end":43},{"text":"            self.secure_compute(stage_id, split, acc_arg, tx)","highlight_start":1,"highlight_end":62},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        default fn iterator_any(&self, split: Box<dyn Split>) -> Result<Box<dyn AnyData>> {","highlight_start":1,"highlight_end":92},{"text":"            Ok(Box::new(self.iterator(split)?.collect::<Vec<_>>()))","highlight_start":1,"highlight_end":68},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/io/local_file_reader.rs","byte_start":14219,"byte_end":14228,"line_start":422,"line_end":422,"column_start":35,"column_end":44,"is_primary":true,"text":[{"text":"        fn move_allocation(&self, value_ptr: (usize, usize)) -> ((usize, usize), usize) {","highlight_start":35,"highlight_end":44}],"label":null,"suggested_replacement":"_value_ptr","suggestion_applicability":"MachineApplicable","expansion":{"span":{"file_name":"src/io/local_file_reader.rs","byte_start":14974,"byte_end":15003,"line_start":450,"line_end":450,"column_start":5,"column_end":34,"is_primary":false,"text":[{"text":"    impl_common_lfs_rddb_funcs!();","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_common_lfs_rddb_funcs!","def_site_span":{"file_name":"src/io/local_file_reader.rs","byte_start":13350,"byte_end":14859,"line_start":384,"line_end":444,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_common_lfs_rddb_funcs {","highlight_start":1,"highlight_end":42},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        fn cache(&self) {","highlight_start":1,"highlight_end":26},{"text":"            panic!(\"no cache for LocalFsReader\");","highlight_start":1,"highlight_end":50},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn should_cache(&self) -> bool {","highlight_start":1,"highlight_end":41},{"text":"            false","highlight_start":1,"highlight_end":18},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn free_data_enc(&self, ptrs: (usize, usize)) {","highlight_start":1,"highlight_end":56},{"text":"            unreachable!()","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_rdd_id(&self) -> usize {","highlight_start":1,"highlight_end":40},{"text":"            self.id","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_op_id(&self) -> OpId {","highlight_start":1,"highlight_end":38},{"text":"            self.op_id","highlight_start":1,"highlight_end":23},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_op_ids(&self, op_ids: &mut Vec<OpId>) {","highlight_start":1,"highlight_end":55},{"text":"            op_ids.push(self.get_op_id());","highlight_start":1,"highlight_end":43},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_context(&self) -> Arc<Context> {","highlight_start":1,"highlight_end":48},{"text":"            self.context.upgrade().unwrap()","highlight_start":1,"highlight_end":44},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_dependencies(&self) -> Vec<Dependency> {","highlight_start":1,"highlight_end":56},{"text":"            vec![]","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_secure(&self) -> bool {","highlight_start":1,"highlight_end":39},{"text":"            self.sec_decoder.is_some()","highlight_start":1,"highlight_end":39},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn move_allocation(&self, value_ptr: (usize, usize)) -> ((usize, usize), usize) {","highlight_start":1,"highlight_end":90},{"text":"            unreachable!()","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn is_pinned(&self) -> bool {","highlight_start":1,"highlight_end":38},{"text":"            true","highlight_start":1,"highlight_end":17},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn iterator_raw(","highlight_start":1,"highlight_end":25},{"text":"            &self,","highlight_start":1,"highlight_end":19},{"text":"            stage_id: usize,","highlight_start":1,"highlight_end":29},{"text":"            split: Box<dyn Split>,","highlight_start":1,"highlight_end":35},{"text":"            acc_arg: &mut AccArg,","highlight_start":1,"highlight_end":34},{"text":"            tx: SyncSender<(usize, usize)>,","highlight_start":1,"highlight_end":44},{"text":"        ) -> Result<Vec<JoinHandle<()>>> {","highlight_start":1,"highlight_end":43},{"text":"            self.secure_compute(stage_id, split, acc_arg, tx)","highlight_start":1,"highlight_end":62},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        default fn iterator_any(&self, split: Box<dyn Split>) -> Result<Box<dyn AnyData>> {","highlight_start":1,"highlight_end":92},{"text":"            Ok(Box::new(self.iterator(split)?.collect::<Vec<_>>()))","highlight_start":1,"highlight_end":68},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `value_ptr`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/io/local_file_reader.rs:422:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m422\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        fn move_allocation(&self, value_ptr: (usize, usize)) -> ((usize, usize), usize) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_value_ptr`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m450\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    impl_common_lfs_rddb_funcs!();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `impl_common_lfs_rddb_funcs` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"unused variable: `ptrs`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/io/local_file_reader.rs","byte_start":13593,"byte_end":13597,"line_start":394,"line_end":394,"column_start":33,"column_end":37,"is_primary":true,"text":[{"text":"        fn free_data_enc(&self, ptrs: (usize, usize)) {","highlight_start":33,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/io/local_file_reader.rs","byte_start":16067,"byte_end":16096,"line_start":479,"line_end":479,"column_start":5,"column_end":34,"is_primary":false,"text":[{"text":"    impl_common_lfs_rddb_funcs!();","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_common_lfs_rddb_funcs!","def_site_span":{"file_name":"src/io/local_file_reader.rs","byte_start":13350,"byte_end":14859,"line_start":384,"line_end":444,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_common_lfs_rddb_funcs {","highlight_start":1,"highlight_end":42},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        fn cache(&self) {","highlight_start":1,"highlight_end":26},{"text":"            panic!(\"no cache for LocalFsReader\");","highlight_start":1,"highlight_end":50},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn should_cache(&self) -> bool {","highlight_start":1,"highlight_end":41},{"text":"            false","highlight_start":1,"highlight_end":18},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn free_data_enc(&self, ptrs: (usize, usize)) {","highlight_start":1,"highlight_end":56},{"text":"            unreachable!()","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_rdd_id(&self) -> usize {","highlight_start":1,"highlight_end":40},{"text":"            self.id","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_op_id(&self) -> OpId {","highlight_start":1,"highlight_end":38},{"text":"            self.op_id","highlight_start":1,"highlight_end":23},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_op_ids(&self, op_ids: &mut Vec<OpId>) {","highlight_start":1,"highlight_end":55},{"text":"            op_ids.push(self.get_op_id());","highlight_start":1,"highlight_end":43},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_context(&self) -> Arc<Context> {","highlight_start":1,"highlight_end":48},{"text":"            self.context.upgrade().unwrap()","highlight_start":1,"highlight_end":44},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_dependencies(&self) -> Vec<Dependency> {","highlight_start":1,"highlight_end":56},{"text":"            vec![]","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_secure(&self) -> bool {","highlight_start":1,"highlight_end":39},{"text":"            self.sec_decoder.is_some()","highlight_start":1,"highlight_end":39},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn move_allocation(&self, value_ptr: (usize, usize)) -> ((usize, usize), usize) {","highlight_start":1,"highlight_end":90},{"text":"            unreachable!()","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn is_pinned(&self) -> bool {","highlight_start":1,"highlight_end":38},{"text":"            true","highlight_start":1,"highlight_end":17},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn iterator_raw(","highlight_start":1,"highlight_end":25},{"text":"            &self,","highlight_start":1,"highlight_end":19},{"text":"            stage_id: usize,","highlight_start":1,"highlight_end":29},{"text":"            split: Box<dyn Split>,","highlight_start":1,"highlight_end":35},{"text":"            acc_arg: &mut AccArg,","highlight_start":1,"highlight_end":34},{"text":"            tx: SyncSender<(usize, usize)>,","highlight_start":1,"highlight_end":44},{"text":"        ) -> Result<Vec<JoinHandle<()>>> {","highlight_start":1,"highlight_end":43},{"text":"            self.secure_compute(stage_id, split, acc_arg, tx)","highlight_start":1,"highlight_end":62},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        default fn iterator_any(&self, split: Box<dyn Split>) -> Result<Box<dyn AnyData>> {","highlight_start":1,"highlight_end":92},{"text":"            Ok(Box::new(self.iterator(split)?.collect::<Vec<_>>()))","highlight_start":1,"highlight_end":68},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/io/local_file_reader.rs","byte_start":13593,"byte_end":13597,"line_start":394,"line_end":394,"column_start":33,"column_end":37,"is_primary":true,"text":[{"text":"        fn free_data_enc(&self, ptrs: (usize, usize)) {","highlight_start":33,"highlight_end":37}],"label":null,"suggested_replacement":"_ptrs","suggestion_applicability":"MachineApplicable","expansion":{"span":{"file_name":"src/io/local_file_reader.rs","byte_start":16067,"byte_end":16096,"line_start":479,"line_end":479,"column_start":5,"column_end":34,"is_primary":false,"text":[{"text":"    impl_common_lfs_rddb_funcs!();","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_common_lfs_rddb_funcs!","def_site_span":{"file_name":"src/io/local_file_reader.rs","byte_start":13350,"byte_end":14859,"line_start":384,"line_end":444,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_common_lfs_rddb_funcs {","highlight_start":1,"highlight_end":42},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        fn cache(&self) {","highlight_start":1,"highlight_end":26},{"text":"            panic!(\"no cache for LocalFsReader\");","highlight_start":1,"highlight_end":50},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn should_cache(&self) -> bool {","highlight_start":1,"highlight_end":41},{"text":"            false","highlight_start":1,"highlight_end":18},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn free_data_enc(&self, ptrs: (usize, usize)) {","highlight_start":1,"highlight_end":56},{"text":"            unreachable!()","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_rdd_id(&self) -> usize {","highlight_start":1,"highlight_end":40},{"text":"            self.id","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_op_id(&self) -> OpId {","highlight_start":1,"highlight_end":38},{"text":"            self.op_id","highlight_start":1,"highlight_end":23},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_op_ids(&self, op_ids: &mut Vec<OpId>) {","highlight_start":1,"highlight_end":55},{"text":"            op_ids.push(self.get_op_id());","highlight_start":1,"highlight_end":43},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_context(&self) -> Arc<Context> {","highlight_start":1,"highlight_end":48},{"text":"            self.context.upgrade().unwrap()","highlight_start":1,"highlight_end":44},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_dependencies(&self) -> Vec<Dependency> {","highlight_start":1,"highlight_end":56},{"text":"            vec![]","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_secure(&self) -> bool {","highlight_start":1,"highlight_end":39},{"text":"            self.sec_decoder.is_some()","highlight_start":1,"highlight_end":39},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn move_allocation(&self, value_ptr: (usize, usize)) -> ((usize, usize), usize) {","highlight_start":1,"highlight_end":90},{"text":"            unreachable!()","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn is_pinned(&self) -> bool {","highlight_start":1,"highlight_end":38},{"text":"            true","highlight_start":1,"highlight_end":17},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn iterator_raw(","highlight_start":1,"highlight_end":25},{"text":"            &self,","highlight_start":1,"highlight_end":19},{"text":"            stage_id: usize,","highlight_start":1,"highlight_end":29},{"text":"            split: Box<dyn Split>,","highlight_start":1,"highlight_end":35},{"text":"            acc_arg: &mut AccArg,","highlight_start":1,"highlight_end":34},{"text":"            tx: SyncSender<(usize, usize)>,","highlight_start":1,"highlight_end":44},{"text":"        ) -> Result<Vec<JoinHandle<()>>> {","highlight_start":1,"highlight_end":43},{"text":"            self.secure_compute(stage_id, split, acc_arg, tx)","highlight_start":1,"highlight_end":62},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        default fn iterator_any(&self, split: Box<dyn Split>) -> Result<Box<dyn AnyData>> {","highlight_start":1,"highlight_end":92},{"text":"            Ok(Box::new(self.iterator(split)?.collect::<Vec<_>>()))","highlight_start":1,"highlight_end":68},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `ptrs`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/io/local_file_reader.rs:394:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m394\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        fn free_data_enc(&self, ptrs: (usize, usize)) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_ptrs`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m479\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    impl_common_lfs_rddb_funcs!();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `impl_common_lfs_rddb_funcs` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"unused variable: `value_ptr`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/io/local_file_reader.rs","byte_start":14219,"byte_end":14228,"line_start":422,"line_end":422,"column_start":35,"column_end":44,"is_primary":true,"text":[{"text":"        fn move_allocation(&self, value_ptr: (usize, usize)) -> ((usize, usize), usize) {","highlight_start":35,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/io/local_file_reader.rs","byte_start":16067,"byte_end":16096,"line_start":479,"line_end":479,"column_start":5,"column_end":34,"is_primary":false,"text":[{"text":"    impl_common_lfs_rddb_funcs!();","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_common_lfs_rddb_funcs!","def_site_span":{"file_name":"src/io/local_file_reader.rs","byte_start":13350,"byte_end":14859,"line_start":384,"line_end":444,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_common_lfs_rddb_funcs {","highlight_start":1,"highlight_end":42},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        fn cache(&self) {","highlight_start":1,"highlight_end":26},{"text":"            panic!(\"no cache for LocalFsReader\");","highlight_start":1,"highlight_end":50},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn should_cache(&self) -> bool {","highlight_start":1,"highlight_end":41},{"text":"            false","highlight_start":1,"highlight_end":18},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn free_data_enc(&self, ptrs: (usize, usize)) {","highlight_start":1,"highlight_end":56},{"text":"            unreachable!()","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_rdd_id(&self) -> usize {","highlight_start":1,"highlight_end":40},{"text":"            self.id","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_op_id(&self) -> OpId {","highlight_start":1,"highlight_end":38},{"text":"            self.op_id","highlight_start":1,"highlight_end":23},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_op_ids(&self, op_ids: &mut Vec<OpId>) {","highlight_start":1,"highlight_end":55},{"text":"            op_ids.push(self.get_op_id());","highlight_start":1,"highlight_end":43},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_context(&self) -> Arc<Context> {","highlight_start":1,"highlight_end":48},{"text":"            self.context.upgrade().unwrap()","highlight_start":1,"highlight_end":44},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_dependencies(&self) -> Vec<Dependency> {","highlight_start":1,"highlight_end":56},{"text":"            vec![]","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_secure(&self) -> bool {","highlight_start":1,"highlight_end":39},{"text":"            self.sec_decoder.is_some()","highlight_start":1,"highlight_end":39},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn move_allocation(&self, value_ptr: (usize, usize)) -> ((usize, usize), usize) {","highlight_start":1,"highlight_end":90},{"text":"            unreachable!()","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn is_pinned(&self) -> bool {","highlight_start":1,"highlight_end":38},{"text":"            true","highlight_start":1,"highlight_end":17},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn iterator_raw(","highlight_start":1,"highlight_end":25},{"text":"            &self,","highlight_start":1,"highlight_end":19},{"text":"            stage_id: usize,","highlight_start":1,"highlight_end":29},{"text":"            split: Box<dyn Split>,","highlight_start":1,"highlight_end":35},{"text":"            acc_arg: &mut AccArg,","highlight_start":1,"highlight_end":34},{"text":"            tx: SyncSender<(usize, usize)>,","highlight_start":1,"highlight_end":44},{"text":"        ) -> Result<Vec<JoinHandle<()>>> {","highlight_start":1,"highlight_end":43},{"text":"            self.secure_compute(stage_id, split, acc_arg, tx)","highlight_start":1,"highlight_end":62},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        default fn iterator_any(&self, split: Box<dyn Split>) -> Result<Box<dyn AnyData>> {","highlight_start":1,"highlight_end":92},{"text":"            Ok(Box::new(self.iterator(split)?.collect::<Vec<_>>()))","highlight_start":1,"highlight_end":68},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/io/local_file_reader.rs","byte_start":14219,"byte_end":14228,"line_start":422,"line_end":422,"column_start":35,"column_end":44,"is_primary":true,"text":[{"text":"        fn move_allocation(&self, value_ptr: (usize, usize)) -> ((usize, usize), usize) {","highlight_start":35,"highlight_end":44}],"label":null,"suggested_replacement":"_value_ptr","suggestion_applicability":"MachineApplicable","expansion":{"span":{"file_name":"src/io/local_file_reader.rs","byte_start":16067,"byte_end":16096,"line_start":479,"line_end":479,"column_start":5,"column_end":34,"is_primary":false,"text":[{"text":"    impl_common_lfs_rddb_funcs!();","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"impl_common_lfs_rddb_funcs!","def_site_span":{"file_name":"src/io/local_file_reader.rs","byte_start":13350,"byte_end":14859,"line_start":384,"line_end":444,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! impl_common_lfs_rddb_funcs {","highlight_start":1,"highlight_end":42},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        fn cache(&self) {","highlight_start":1,"highlight_end":26},{"text":"            panic!(\"no cache for LocalFsReader\");","highlight_start":1,"highlight_end":50},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn should_cache(&self) -> bool {","highlight_start":1,"highlight_end":41},{"text":"            false","highlight_start":1,"highlight_end":18},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn free_data_enc(&self, ptrs: (usize, usize)) {","highlight_start":1,"highlight_end":56},{"text":"            unreachable!()","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_rdd_id(&self) -> usize {","highlight_start":1,"highlight_end":40},{"text":"            self.id","highlight_start":1,"highlight_end":20},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_op_id(&self) -> OpId {","highlight_start":1,"highlight_end":38},{"text":"            self.op_id","highlight_start":1,"highlight_end":23},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_op_ids(&self, op_ids: &mut Vec<OpId>) {","highlight_start":1,"highlight_end":55},{"text":"            op_ids.push(self.get_op_id());","highlight_start":1,"highlight_end":43},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_context(&self) -> Arc<Context> {","highlight_start":1,"highlight_end":48},{"text":"            self.context.upgrade().unwrap()","highlight_start":1,"highlight_end":44},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_dependencies(&self) -> Vec<Dependency> {","highlight_start":1,"highlight_end":56},{"text":"            vec![]","highlight_start":1,"highlight_end":19},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn get_secure(&self) -> bool {","highlight_start":1,"highlight_end":39},{"text":"            self.sec_decoder.is_some()","highlight_start":1,"highlight_end":39},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn move_allocation(&self, value_ptr: (usize, usize)) -> ((usize, usize), usize) {","highlight_start":1,"highlight_end":90},{"text":"            unreachable!()","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn is_pinned(&self) -> bool {","highlight_start":1,"highlight_end":38},{"text":"            true","highlight_start":1,"highlight_end":17},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        fn iterator_raw(","highlight_start":1,"highlight_end":25},{"text":"            &self,","highlight_start":1,"highlight_end":19},{"text":"            stage_id: usize,","highlight_start":1,"highlight_end":29},{"text":"            split: Box<dyn Split>,","highlight_start":1,"highlight_end":35},{"text":"            acc_arg: &mut AccArg,","highlight_start":1,"highlight_end":34},{"text":"            tx: SyncSender<(usize, usize)>,","highlight_start":1,"highlight_end":44},{"text":"        ) -> Result<Vec<JoinHandle<()>>> {","highlight_start":1,"highlight_end":43},{"text":"            self.secure_compute(stage_id, split, acc_arg, tx)","highlight_start":1,"highlight_end":62},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        default fn iterator_any(&self, split: Box<dyn Split>) -> Result<Box<dyn AnyData>> {","highlight_start":1,"highlight_end":92},{"text":"            Ok(Box::new(self.iterator(split)?.collect::<Vec<_>>()))","highlight_start":1,"highlight_end":68},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `value_ptr`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/io/local_file_reader.rs:422:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m422\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        fn move_allocation(&self, value_ptr: (usize, usize)) -> ((usize, usize), usize) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_value_ptr`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m479\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    impl_common_lfs_rddb_funcs!();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `impl_common_lfs_rddb_funcs` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"unused variable: `op_ids`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/cartesian_rdd.rs","byte_start":2510,"byte_end":2516,"line_start":108,"line_end":108,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"    fn get_op_ids(&self, op_ids: &mut Vec<OpId>) {","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rdd/cartesian_rdd.rs","byte_start":2510,"byte_end":2516,"line_start":108,"line_end":108,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"    fn get_op_ids(&self, op_ids: &mut Vec<OpId>) {","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":"_op_ids","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `op_ids`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/cartesian_rdd.rs:108:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m108\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn get_op_ids(&self, op_ids: &mut Vec<OpId>) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_op_ids`\u001b[0m\n\n"}
{"message":"unused variable: `stage_id`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/cartesian_rdd.rs","byte_start":4796,"byte_end":4804,"line_start":188,"line_end":188,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"        stage_id: usize,","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rdd/cartesian_rdd.rs","byte_start":4796,"byte_end":4804,"line_start":188,"line_end":188,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"        stage_id: usize,","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"_stage_id","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `stage_id`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/cartesian_rdd.rs:188:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        stage_id: usize,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_stage_id`\u001b[0m\n\n"}
{"message":"unused variable: `split`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/cartesian_rdd.rs","byte_start":4821,"byte_end":4826,"line_start":189,"line_end":189,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"        split: Box<dyn Split>,","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rdd/cartesian_rdd.rs","byte_start":4821,"byte_end":4826,"line_start":189,"line_end":189,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"        split: Box<dyn Split>,","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":"_split","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `split`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/cartesian_rdd.rs:189:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        split: Box<dyn Split>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_split`\u001b[0m\n\n"}
{"message":"unused variable: `acc_arg`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/cartesian_rdd.rs","byte_start":4852,"byte_end":4859,"line_start":190,"line_end":190,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"        acc_arg: &mut AccArg,","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rdd/cartesian_rdd.rs","byte_start":4852,"byte_end":4859,"line_start":190,"line_end":190,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"        acc_arg: &mut AccArg,","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"_acc_arg","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `acc_arg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/cartesian_rdd.rs:190:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m190\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        acc_arg: &mut AccArg,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_acc_arg`\u001b[0m\n\n"}
{"message":"unused variable: `tx`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/cartesian_rdd.rs","byte_start":4882,"byte_end":4884,"line_start":191,"line_end":191,"column_start":9,"column_end":11,"is_primary":true,"text":[{"text":"        tx: SyncSender<(usize, usize)>,","highlight_start":9,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rdd/cartesian_rdd.rs","byte_start":4882,"byte_end":4884,"line_start":191,"line_end":191,"column_start":9,"column_end":11,"is_primary":true,"text":[{"text":"        tx: SyncSender<(usize, usize)>,","highlight_start":9,"highlight_end":11}],"label":null,"suggested_replacement":"_tx","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `tx`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/cartesian_rdd.rs:191:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m191\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        tx: SyncSender<(usize, usize)>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_tx`\u001b[0m\n\n"}
{"message":"unused variable: `stage_id`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/co_grouped_rdd.rs","byte_start":20006,"byte_end":20014,"line_start":571,"line_end":571,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    stage_id: usize,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rdd/co_grouped_rdd.rs","byte_start":20006,"byte_end":20014,"line_start":571,"line_end":571,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    stage_id: usize,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":"_stage_id","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `stage_id`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/co_grouped_rdd.rs:571:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m571\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    stage_id: usize,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_stage_id`\u001b[0m\n\n"}
{"message":"unused variable: `buckets`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/co_grouped_rdd.rs","byte_start":20027,"byte_end":20034,"line_start":572,"line_end":572,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    buckets: (","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rdd/co_grouped_rdd.rs","byte_start":20027,"byte_end":20034,"line_start":572,"line_end":572,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    buckets: (","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":"_buckets","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `buckets`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/co_grouped_rdd.rs:572:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m572\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    buckets: (\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_buckets`\u001b[0m\n\n"}
{"message":"unused variable: `cur_rdd_ids`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/co_grouped_rdd.rs","byte_start":20167,"byte_end":20178,"line_start":578,"line_end":578,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    cur_rdd_ids: &Vec<usize>,","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rdd/co_grouped_rdd.rs","byte_start":20167,"byte_end":20178,"line_start":578,"line_end":578,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    cur_rdd_ids: &Vec<usize>,","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":"_cur_rdd_ids","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `cur_rdd_ids`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/co_grouped_rdd.rs:578:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m578\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    cur_rdd_ids: &Vec<usize>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_cur_rdd_ids`\u001b[0m\n\n"}
{"message":"unused variable: `cur_op_ids`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/co_grouped_rdd.rs","byte_start":20197,"byte_end":20207,"line_start":579,"line_end":579,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    cur_op_ids: &Vec<OpId>,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rdd/co_grouped_rdd.rs","byte_start":20197,"byte_end":20207,"line_start":579,"line_end":579,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    cur_op_ids: &Vec<OpId>,","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":"_cur_op_ids","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `cur_op_ids`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/co_grouped_rdd.rs:579:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m579\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    cur_op_ids: &Vec<OpId>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_cur_op_ids`\u001b[0m\n\n"}
{"message":"unused variable: `cur_part_ids`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/co_grouped_rdd.rs","byte_start":20225,"byte_end":20237,"line_start":580,"line_end":580,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    cur_part_ids: &Vec<usize>,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rdd/co_grouped_rdd.rs","byte_start":20225,"byte_end":20237,"line_start":580,"line_end":580,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"    cur_part_ids: &Vec<usize>,","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":"_cur_part_ids","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `cur_part_ids`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/co_grouped_rdd.rs:580:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m580\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    cur_part_ids: &Vec<usize>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_cur_part_ids`\u001b[0m\n\n"}
{"message":"unused variable: `part_group`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/co_grouped_rdd.rs","byte_start":20256,"byte_end":20266,"line_start":581,"line_end":581,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    part_group: (usize, usize, usize),","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rdd/co_grouped_rdd.rs","byte_start":20256,"byte_end":20266,"line_start":581,"line_end":581,"column_start":5,"column_end":15,"is_primary":true,"text":[{"text":"    part_group: (usize, usize, usize),","highlight_start":5,"highlight_end":15}],"label":null,"suggested_replacement":"_part_group","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `part_group`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/co_grouped_rdd.rs:581:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m581\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    part_group: (usize, usize, usize),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_part_group`\u001b[0m\n\n"}
{"message":"unused variable: `acc_arg`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/co_grouped_rdd.rs","byte_start":20295,"byte_end":20302,"line_start":582,"line_end":582,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    acc_arg: &AccArg,","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rdd/co_grouped_rdd.rs","byte_start":20295,"byte_end":20302,"line_start":582,"line_end":582,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    acc_arg: &AccArg,","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":"_acc_arg","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `acc_arg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/co_grouped_rdd.rs:582:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m582\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    acc_arg: &AccArg,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_acc_arg`\u001b[0m\n\n"}
{"message":"variable `has_shuffle` is assigned to, but never used","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/co_grouped_rdd.rs","byte_start":3392,"byte_end":3403,"line_start":134,"line_end":134,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"            let mut has_shuffle = false;","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using `_has_shuffle` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `has_shuffle` is assigned to, but never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/co_grouped_rdd.rs:134:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let mut has_shuffle = false;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `_has_shuffle` instead\u001b[0m\n\n"}
{"message":"value assigned to `has_shuffle` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/co_grouped_rdd.rs","byte_start":5623,"byte_end":5634,"line_start":181,"line_end":181,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"                    has_shuffle = true;","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_assignments)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `has_shuffle` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/co_grouped_rdd.rs:181:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    has_shuffle = true;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_assignments)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"value assigned to `has_shuffle` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/co_grouped_rdd.rs","byte_start":8275,"byte_end":8286,"line_start":239,"line_end":239,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"                    has_shuffle = true;","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `has_shuffle` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/co_grouped_rdd.rs:239:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m239\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    has_shuffle = true;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"unused variable: `stage_id`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/coalesced_rdd.rs","byte_start":7806,"byte_end":7814,"line_start":272,"line_end":272,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"        stage_id: usize,","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rdd/coalesced_rdd.rs","byte_start":7806,"byte_end":7814,"line_start":272,"line_end":272,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"        stage_id: usize,","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"_stage_id","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `stage_id`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/coalesced_rdd.rs:272:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m272\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        stage_id: usize,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_stage_id`\u001b[0m\n\n"}
{"message":"unused variable: `split`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/coalesced_rdd.rs","byte_start":7831,"byte_end":7836,"line_start":273,"line_end":273,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"        split: Box<dyn Split>,","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rdd/coalesced_rdd.rs","byte_start":7831,"byte_end":7836,"line_start":273,"line_end":273,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"        split: Box<dyn Split>,","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":"_split","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `split`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/coalesced_rdd.rs:273:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m273\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        split: Box<dyn Split>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_split`\u001b[0m\n\n"}
{"message":"unused variable: `acc_arg`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/coalesced_rdd.rs","byte_start":7862,"byte_end":7869,"line_start":274,"line_end":274,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"        acc_arg: &mut AccArg,","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rdd/coalesced_rdd.rs","byte_start":7862,"byte_end":7869,"line_start":274,"line_end":274,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"        acc_arg: &mut AccArg,","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"_acc_arg","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `acc_arg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/coalesced_rdd.rs:274:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m274\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        acc_arg: &mut AccArg,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_acc_arg`\u001b[0m\n\n"}
{"message":"unused variable: `tx`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/coalesced_rdd.rs","byte_start":7892,"byte_end":7894,"line_start":275,"line_end":275,"column_start":9,"column_end":11,"is_primary":true,"text":[{"text":"        tx: SyncSender<(usize, usize)>,","highlight_start":9,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rdd/coalesced_rdd.rs","byte_start":7892,"byte_end":7894,"line_start":275,"line_end":275,"column_start":9,"column_end":11,"is_primary":true,"text":[{"text":"        tx: SyncSender<(usize, usize)>,","highlight_start":9,"highlight_end":11}],"label":null,"suggested_replacement":"_tx","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `tx`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/coalesced_rdd.rs:275:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m275\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        tx: SyncSender<(usize, usize)>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_tx`\u001b[0m\n\n"}
{"message":"variable `has_shuffle` is assigned to, but never used","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/join_rdd.rs","byte_start":2475,"byte_end":2486,"line_start":91,"line_end":91,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"            let mut has_shuffle = false;","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using `_has_shuffle` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `has_shuffle` is assigned to, but never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/join_rdd.rs:91:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let mut has_shuffle = false;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `_has_shuffle` instead\u001b[0m\n\n"}
{"message":"value assigned to `has_shuffle` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/join_rdd.rs","byte_start":4706,"byte_end":4717,"line_start":138,"line_end":138,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"                    has_shuffle = true;","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `has_shuffle` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/join_rdd.rs:138:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    has_shuffle = true;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"value assigned to `has_shuffle` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/join_rdd.rs","byte_start":7358,"byte_end":7369,"line_start":196,"line_end":196,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"                    has_shuffle = true;","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: value assigned to `has_shuffle` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/join_rdd.rs:196:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    has_shuffle = true;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"unused variable: `k`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/pair_rdd.rs","byte_start":8748,"byte_end":8749,"line_start":315,"line_end":315,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        Ok(Box::new(self.prev.iterator(split)?.map(|(k, v)| v)))","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rdd/pair_rdd.rs","byte_start":8748,"byte_end":8749,"line_start":315,"line_end":315,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        Ok(Box::new(self.prev.iterator(split)?.map(|(k, v)| v)))","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":"_k","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `k`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/pair_rdd.rs:315:54\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m315\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        Ok(Box::new(self.prev.iterator(split)?.map(|(k, v)| v)))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_k`\u001b[0m\n\n"}
{"message":"unused variable: `alpha`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/shuffled_rdd.rs","byte_start":11274,"byte_end":11279,"line_start":373,"line_end":373,"column_start":23,"column_end":28,"is_primary":true,"text":[{"text":"        let (buckets, alpha, beta, n_out_prime) = {","highlight_start":23,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rdd/shuffled_rdd.rs","byte_start":11274,"byte_end":11279,"line_start":373,"line_end":373,"column_start":23,"column_end":28,"is_primary":true,"text":[{"text":"        let (buckets, alpha, beta, n_out_prime) = {","highlight_start":23,"highlight_end":28}],"label":null,"suggested_replacement":"_alpha","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `alpha`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/shuffled_rdd.rs:373:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m373\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let (buckets, alpha, beta, n_out_prime) = {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_alpha`\u001b[0m\n\n"}
{"message":"unused variable: `part`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/union_rdd.rs","byte_start":11147,"byte_end":11151,"line_start":334,"line_end":334,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"            let part = rdds[0]","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/rdd/union_rdd.rs","byte_start":11147,"byte_end":11151,"line_start":334,"line_end":334,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"            let part = rdds[0]","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":"_part","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `part`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/union_rdd.rs:334:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m334\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let part = rdds[0]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_part`\u001b[0m\n\n"}
{"message":"unused variable: `final_rdd_id`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/scheduler/base_scheduler.rs","byte_start":1459,"byte_end":1471,"line_start":44,"line_end":44,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"            let final_rdd_id = jt.final_rdd.get_rdd_id();","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/scheduler/base_scheduler.rs","byte_start":1459,"byte_end":1471,"line_start":44,"line_end":44,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"            let final_rdd_id = jt.final_rdd.get_rdd_id();","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"_final_rdd_id","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `final_rdd_id`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/scheduler/base_scheduler.rs:44:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let final_rdd_id = jt.final_rdd.get_rdd_id();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_final_rdd_id`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/cache_tracker.rs","byte_start":4930,"byte_end":4942,"line_start":148,"line_end":148,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"            let mut listener = TcpListener::bind(self.master_addr)","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/cache_tracker.rs","byte_start":4930,"byte_end":4934,"line_start":148,"line_end":148,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"            let mut listener = TcpListener::bind(self.master_addr)","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/cache_tracker.rs:148:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m148\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let mut listener = TcpListener::bind(self.master_addr)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/map_output_tracker.rs","byte_start":6498,"byte_end":6510,"line_start":173,"line_end":173,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"            let mut listener = TcpListener::bind(master_addr)","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/map_output_tracker.rs","byte_start":6498,"byte_end":6502,"line_start":173,"line_end":173,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"            let mut listener = TcpListener::bind(master_addr)","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/map_output_tracker.rs:173:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m173\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let mut listener = TcpListener::bind(master_addr)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/flatmapper_rdd.rs","byte_start":1201,"byte_end":1209,"line_start":50,"line_end":50,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        let mut vals = RddVals::new(prev.get_context(), prev.get_secure());","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/rdd/flatmapper_rdd.rs","byte_start":1201,"byte_end":1205,"line_start":50,"line_end":50,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut vals = RddVals::new(prev.get_context(), prev.get_secure());","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/flatmapper_rdd.rs:50:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut vals = RddVals::new(prev.get_context(), prev.get_secure());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/mapper_rdd.rs","byte_start":1553,"byte_end":1561,"line_start":58,"line_end":58,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        let mut vals = RddVals::new(prev.get_context(), prev.get_secure());","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/rdd/mapper_rdd.rs","byte_start":1553,"byte_end":1557,"line_start":58,"line_end":58,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut vals = RddVals::new(prev.get_context(), prev.get_secure());","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/mapper_rdd.rs:58:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut vals = RddVals::new(prev.get_context(), prev.get_secure());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/pair_rdd.rs","byte_start":6593,"byte_end":6601,"line_start":234,"line_end":234,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        let mut vals = RddVals::new(prev.get_context(), prev.get_secure());","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/rdd/pair_rdd.rs","byte_start":6593,"byte_end":6597,"line_start":234,"line_end":234,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut vals = RddVals::new(prev.get_context(), prev.get_secure());","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/pair_rdd.rs:234:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m234\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut vals = RddVals::new(prev.get_context(), prev.get_secure());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/pair_rdd.rs","byte_start":10541,"byte_end":10549,"line_start":383,"line_end":383,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        let mut vals = RddVals::new(prev.get_context(), prev.get_secure());","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/rdd/pair_rdd.rs","byte_start":10541,"byte_end":10545,"line_start":383,"line_end":383,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut vals = RddVals::new(prev.get_context(), prev.get_secure());","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/pair_rdd.rs:383:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m383\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut vals = RddVals::new(prev.get_context(), prev.get_secure());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/pair_rdd.rs","byte_start":15004,"byte_end":15012,"line_start":544,"line_end":544,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        let mut vals = RddVals::new(prev.get_context(), prev.get_secure());","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/rdd/pair_rdd.rs","byte_start":15004,"byte_end":15008,"line_start":544,"line_end":544,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut vals = RddVals::new(prev.get_context(), prev.get_secure());","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/pair_rdd.rs:544:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m544\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut vals = RddVals::new(prev.get_context(), prev.get_secure());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/partitionwise_sampled_rdd.rs","byte_start":1041,"byte_end":1049,"line_start":39,"line_end":39,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        let mut vals = RddVals::new(prev.get_context(), prev.get_secure());","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/rdd/partitionwise_sampled_rdd.rs","byte_start":1041,"byte_end":1045,"line_start":39,"line_end":39,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut vals = RddVals::new(prev.get_context(), prev.get_secure());","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/partitionwise_sampled_rdd.rs:39:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut vals = RddVals::new(prev.get_context(), prev.get_secure());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/shuffled_rdd.rs","byte_start":9553,"byte_end":9564,"line_start":325,"line_end":325,"column_start":20,"column_end":31,"is_primary":true,"text":[{"text":"        let (part, mut buckets) = {","highlight_start":20,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/rdd/shuffled_rdd.rs","byte_start":9553,"byte_end":9557,"line_start":325,"line_end":325,"column_start":20,"column_end":24,"is_primary":true,"text":[{"text":"        let (part, mut buckets) = {","highlight_start":20,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/shuffled_rdd.rs:325:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m325\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let (part, mut buckets) = {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/map_partitions_rdd.rs","byte_start":1681,"byte_end":1689,"line_start":60,"line_end":60,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        let mut vals = RddVals::new(prev.get_context(), prev.get_secure());","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/rdd/map_partitions_rdd.rs","byte_start":1681,"byte_end":1685,"line_start":60,"line_end":60,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut vals = RddVals::new(prev.get_context(), prev.get_secure());","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/map_partitions_rdd.rs:60:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let mut vals = RddVals::new(prev.get_context(), prev.get_secure());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/scheduler/distributed_scheduler.rs","byte_start":17113,"byte_end":17123,"line_start":464,"line_end":464,"column_start":24,"column_end":34,"is_primary":true,"text":[{"text":"                    Ok(mut stream) => {","highlight_start":24,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/scheduler/distributed_scheduler.rs","byte_start":17113,"byte_end":17117,"line_start":464,"line_end":464,"column_start":24,"column_end":28,"is_primary":true,"text":[{"text":"                    Ok(mut stream) => {","highlight_start":24,"highlight_end":28}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/scheduler/distributed_scheduler.rs:464:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m464\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    Ok(mut stream) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"panic message is not a string literal","code":{"code":"non_fmt_panics","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":72805,"byte_end":72866,"line_start":2302,"line_end":2302,"column_start":13,"column_end":74,"is_primary":true,"text":[{"text":"            format!(\"Weights must be nonnegative, but got {:?}\", weights)","highlight_start":13,"highlight_end":74}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_fmt_panics)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this usage of assert!() is deprecated; it will be a hard error in Rust 2021","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the assert!() macro supports formatting, so there's no need for the format!() macro here","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the `format!(..)` macro call","code":null,"level":"help","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":72805,"byte_end":72813,"line_start":2302,"line_end":2302,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"            format!(\"Weights must be nonnegative, but got {:?}\", weights)","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/rdd/rdd.rs","byte_start":72865,"byte_end":72866,"line_start":2302,"line_end":2302,"column_start":73,"column_end":74,"is_primary":true,"text":[{"text":"            format!(\"Weights must be nonnegative, but got {:?}\", weights)","highlight_start":73,"highlight_end":74}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: panic message is not a string literal\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/rdd.rs:2302:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2302\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            format!(\"Weights must be nonnegative, but got {:?}\", weights)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_fmt_panics)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this usage of assert!() is deprecated; it will be a hard error in Rust 2021\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the assert!() macro supports formatting, so there's no need for the format!() macro here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the `format!(..)` macro call\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2302\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;9mformat!(\u001b[0m\u001b[0m\"Weights must be nonnegative, but got {:?}\", weights\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2302\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            \"Weights must be nonnegative, but got {:?}\", weights\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
{"message":"panic message is not a string literal","code":{"code":"non_fmt_panics","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":72930,"byte_end":72995,"line_start":2306,"line_end":2306,"column_start":13,"column_end":78,"is_primary":true,"text":[{"text":"            format!(\"Sum of weights must be positive, but got {:?}\", weights)","highlight_start":13,"highlight_end":78}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this usage of assert!() is deprecated; it will be a hard error in Rust 2021","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the assert!() macro supports formatting, so there's no need for the format!() macro here","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the `format!(..)` macro call","code":null,"level":"help","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":72930,"byte_end":72938,"line_start":2306,"line_end":2306,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"            format!(\"Sum of weights must be positive, but got {:?}\", weights)","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/rdd/rdd.rs","byte_start":72994,"byte_end":72995,"line_start":2306,"line_end":2306,"column_start":77,"column_end":78,"is_primary":true,"text":[{"text":"            format!(\"Sum of weights must be positive, but got {:?}\", weights)","highlight_start":77,"highlight_end":78}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: panic message is not a string literal\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/rdd.rs:2306:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2306\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            format!(\"Sum of weights must be positive, but got {:?}\", weights)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this usage of assert!() is deprecated; it will be a hard error in Rust 2021\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the assert!() macro supports formatting, so there's no need for the format!() macro here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the `format!(..)` macro call\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2306\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;9mformat!(\u001b[0m\u001b[0m\"Sum of weights must be positive, but got {:?}\", weights\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2306\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            \"Sum of weights must be positive, but got {:?}\", weights\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
{"message":"panic message is not a string literal","code":{"code":"non_fmt_panics","explanation":null},"level":"warning","spans":[{"file_name":"src/utils/random.rs","byte_start":6852,"byte_end":6911,"line_start":178,"line_end":178,"column_start":13,"column_end":72,"is_primary":true,"text":[{"text":"            format!(\"Lower bound {} must be <= upper bound {}\", lb, ub)","highlight_start":13,"highlight_end":72}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this usage of assert!() is deprecated; it will be a hard error in Rust 2021","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the assert!() macro supports formatting, so there's no need for the format!() macro here","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the `format!(..)` macro call","code":null,"level":"help","spans":[{"file_name":"src/utils/random.rs","byte_start":6852,"byte_end":6860,"line_start":178,"line_end":178,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"            format!(\"Lower bound {} must be <= upper bound {}\", lb, ub)","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/utils/random.rs","byte_start":6910,"byte_end":6911,"line_start":178,"line_end":178,"column_start":71,"column_end":72,"is_primary":true,"text":[{"text":"            format!(\"Lower bound {} must be <= upper bound {}\", lb, ub)","highlight_start":71,"highlight_end":72}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: panic message is not a string literal\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/utils/random.rs:178:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            format!(\"Lower bound {} must be <= upper bound {}\", lb, ub)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this usage of assert!() is deprecated; it will be a hard error in Rust 2021\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the assert!() macro supports formatting, so there's no need for the format!() macro here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the `format!(..)` macro call\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;9mformat!(\u001b[0m\u001b[0m\"Lower bound {} must be <= upper bound {}\", lb, ub\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            \"Lower bound {} must be <= upper bound {}\", lb, ub\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
{"message":"panic message is not a string literal","code":{"code":"non_fmt_panics","explanation":null},"level":"warning","spans":[{"file_name":"src/utils/random.rs","byte_start":6996,"byte_end":7040,"line_start":182,"line_end":182,"column_start":13,"column_end":57,"is_primary":true,"text":[{"text":"            format!(\"Lower bound {} must be >= 0.0\", lb)","highlight_start":13,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this usage of assert!() is deprecated; it will be a hard error in Rust 2021","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the assert!() macro supports formatting, so there's no need for the format!() macro here","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the `format!(..)` macro call","code":null,"level":"help","spans":[{"file_name":"src/utils/random.rs","byte_start":6996,"byte_end":7004,"line_start":182,"line_end":182,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"            format!(\"Lower bound {} must be >= 0.0\", lb)","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/utils/random.rs","byte_start":7039,"byte_end":7040,"line_start":182,"line_end":182,"column_start":56,"column_end":57,"is_primary":true,"text":[{"text":"            format!(\"Lower bound {} must be >= 0.0\", lb)","highlight_start":56,"highlight_end":57}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: panic message is not a string literal\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/utils/random.rs:182:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m182\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            format!(\"Lower bound {} must be >= 0.0\", lb)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this usage of assert!() is deprecated; it will be a hard error in Rust 2021\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the assert!() macro supports formatting, so there's no need for the format!() macro here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the `format!(..)` macro call\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m182\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;9mformat!(\u001b[0m\u001b[0m\"Lower bound {} must be >= 0.0\", lb\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m182\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            \"Lower bound {} must be >= 0.0\", lb\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
{"message":"panic message is not a string literal","code":{"code":"non_fmt_panics","explanation":null},"level":"warning","spans":[{"file_name":"src/utils/random.rs","byte_start":7125,"byte_end":7169,"line_start":186,"line_end":186,"column_start":13,"column_end":57,"is_primary":true,"text":[{"text":"            format!(\"Upper bound {} must be <= 1.0\", ub)","highlight_start":13,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this usage of assert!() is deprecated; it will be a hard error in Rust 2021","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the assert!() macro supports formatting, so there's no need for the format!() macro here","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the `format!(..)` macro call","code":null,"level":"help","spans":[{"file_name":"src/utils/random.rs","byte_start":7125,"byte_end":7133,"line_start":186,"line_end":186,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"            format!(\"Upper bound {} must be <= 1.0\", ub)","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/utils/random.rs","byte_start":7168,"byte_end":7169,"line_start":186,"line_end":186,"column_start":56,"column_end":57,"is_primary":true,"text":[{"text":"            format!(\"Upper bound {} must be <= 1.0\", ub)","highlight_start":56,"highlight_end":57}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: panic message is not a string literal\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/utils/random.rs:186:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            format!(\"Upper bound {} must be <= 1.0\", ub)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this usage of assert!() is deprecated; it will be a hard error in Rust 2021\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/panic-macro-consistency.html>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the assert!() macro supports formatting, so there's no need for the format!() macro here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the `format!(..)` macro call\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;9mformat!(\u001b[0m\u001b[0m\"Upper bound {} must be <= 1.0\", ub\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            \"Upper bound {} must be <= 1.0\", ub\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\n"}
{"message":"static variable `immediate_cout` should have an upper case name","code":{"code":"non_upper_case_globals","explanation":null},"level":"warning","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":2375,"byte_end":2389,"line_start":78,"line_end":78,"column_start":8,"column_end":22,"is_primary":true,"text":[{"text":"static immediate_cout: bool = true;","highlight_start":8,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_upper_case_globals)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to upper case","code":null,"level":"help","spans":[{"file_name":"src/rdd/rdd.rs","byte_start":2375,"byte_end":2389,"line_start":78,"line_end":78,"column_start":8,"column_end":22,"is_primary":true,"text":[{"text":"static immediate_cout: bool = true;","highlight_start":8,"highlight_end":22}],"label":null,"suggested_replacement":"IMMEDIATE_COUT","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: static variable `immediate_cout` should have an upper case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/rdd/rdd.rs:78:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mstatic immediate_cout: bool = true;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper case: `IMMEDIATE_COUT`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_upper_case_globals)]` on by default\u001b[0m\n\n"}
{"message":"153 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 153 warnings emitted\u001b[0m\n\n"}
